<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[书写规范与命名规则]]></title>
    <url>%2F%E4%B9%A6%E5%86%99%E8%A7%84%E8%8C%83%E4%B8%8E%E5%91%BD%E5%90%8D%E8%A7%84%E5%88%99.html</url>
    <content type="text"><![CDATA[[摘要] 代码规范来自alloyteam代码规范, 是腾讯团队的代码规范之一 AlloyTeam代码规范 项目命名:my_project_name 目录命名: 有复数结构时候还是要用复数命名, 例如scripts js css scss html命名: 也是和项目命名一样 html 在属性上, 使用双引号不要使用单引号 属性的名字全部用小写用中划线来分割 在开头还是要简单地doctype 如 主要用于语音和翻译工具使用 要字符编码 属性顺序 class id 更加具体, 尽量少用 name data-* src…. 空格1234#main { background: gray; border: 1px, solid, gray !important;} 注释注释统一使用/**/ CSS命名 类名用小写字母, change_icon id用驼峰 函数 变量 等用驼峰 CSS属性申明顺序12345678910111213141516171819202122.main { display: block; float: right; position: absolute; top: 0; z-index: 100; border: 1px, solid, gray; border-radius: 3px; width: 100px; height: 100px; font: normal, 13px, "Helvetical Neue", sans-serif; line-height: 1.5; text-align: center; color: #333; background-color: #399; opacity: 0.8;} 颜色使用十六进制小写 简写 属性简写123456789101112/* not good */.element { transition: opacity 1s linear 2s;}/* good */.element { transition-delay: 2s; transition-timing-function: linear; transition-durartion: 1s; transition-property: opacity;} SCSS提交的代码中不要有 @debug； 声明顺序： @extend 不包含 @content 的 @include 包含 @content 的 @include 自身属性 嵌套规则 @import 引入的文件不需要开头的’_’和结尾的’.scss’； 嵌套最多不能超过5层； @extend 中使用placeholder选择器； 去掉不必要的父级引用符号’&’。 发布的代码中不要有 @import； 尽量少用’*’选择器。 用 border: 0; 代替 border: none;； JavaScript单行长度不要超过80 123456789/* not good */for(i0;i]]></content>
  </entry>
  <entry>
    <title><![CDATA[div填充剩余宽度]]></title>
    <url>%2Fdiv%E5%A1%AB%E5%85%85%E5%89%A9%E4%BD%99%E5%AE%BD%E5%BA%A6.html</url>
    <content type="text"><![CDATA[[摘要] 要实现: 1234567891011121314151617181920212223 #wrap{ padding-left: 200px; // 重点 } .leftpart{ float:left; // 重点 width:200px; margin-left:-200px; // 重点 height: 200px; background-color:lightgreen; } .rightpart{ float: right; width: 100%; // 重点 height: 200px; background-color: lightseagreen; } 宽度自适应部分 width200的左边栏 如果要让footer在屏幕底部可以这样设置 123456789#content { padding-bottom: 60px; // 意思是在底部预留出60px}#footer { position: absolute; bottom: 0; // 关键 left: 0; // ie下一定要记得 height: 60px; // 这也是一定要写的}]]></content>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[javaScript整理]]></title>
    <url>%2FjavaScript%E6%95%B4%E7%90%86.html</url>
    <content type="text"><![CDATA[[摘要] 对象，基本上 JavaScript 里的任何东西都是对象，而且都可以被储存在变量里。12var myVariable = 'Bob';myVariable = 'Steve'; 2018年09月10日20:08:30 margin最外层,如果设置两个参数就是代表上下和左右,auto是调整到居中显示,默认是四个从上右下左来的,]]></content>
  </entry>
  <entry>
    <title><![CDATA[软件开发技术与应用]]></title>
    <url>%2F%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%BA%94%E7%94%A8.html</url>
    <content type="text"><![CDATA[function doDecrypt (pwd, onError) { console.log('in doDecrypt'); const txt = document.getElementById('enc_content').innerHTML; let plantext; try { const bytes = CryptoJS.AES.decrypt(txt, pwd); var plaintext = bytes.toString(CryptoJS.enc.Utf8); } catch(err) { if(onError) { onError(err); } return; } document.getElementById('enc_content').innerHTML = plaintext; document.getElementById('enc_content').style.display = 'block'; document.getElementById('enc_passwd').style.display = 'none'; if(typeof MathJax !== 'undefined') { MathJax.Hub.Queue( ['resetEquationNumbers', MathJax.InputJax.TeX], ['PreProcess', MathJax.Hub], ['Reprocess', MathJax.Hub] ); } } U2FsdGVkX19vwSCPS2u3SXDcFNmWZNgeKVNjyvXnEFC2+YF1k4XvrKSVaqFfPXqIlAyKmDvueRE2jjv0j5T/qWIkR/ClPi4rwfQ2Q502NkKjnWhqeR8j1gekv55cJreoUux1ENdhmlG7k4OPGDHTa2yIxv6q7rbtxbpBffBTPJP6xjtkxF6Cl3NkXxglBu7rxJn7WJSiWxXHyH2toOyKAX25fh1Iahjb7OsJF+lmH/g9y4A2xzoqyeBk3r8SK/gRdZBCUD5iu/qU5gtQFGKpyQVFIJq6Ua5157+vBcVOUxOQLe4edTPZUJZp872N5p8gIAxgRAOQB+s5jckmclF6v95wGfwWrxS8LKUIVVpp/ehEoy64ZsQprQJjpTK3MTtptcpl/ayp7BP9e8VUlswkRO9YLgt4w95ONkhj1dGc6kK6nmEz3PnCtiV51UTLsWhMRDvX0DwlkMFnrrxORBYasufmgVK4gky85q6WPt9DNx2sTCQqdrxCO/9Q1uf6yrP9VD6v6TOX7A35q4WoBogB7yMpvFi4jPgQ88WY2pClHuWWE0Co5icNykB3y80KdylOVesT1Wzp+tkKBOcjjeUJtMTtZrIJi3LZnDjXLtWNiOnHfx+7oO8GzRf65YwRQBXXqqkb1sms/d2TYL56uD/c8YvmRStIwVQi3fTz/P55S4xHEuUVCeE6WxCfCISAmlvfU9J1ztP78uuPJiY/Uii2Ly8nV90SJpI0iTWj+/N378j4kcICKCoaTBDqYTcuHZbMAfPA+wLCO65jHq6L0lJRoIjLQHHAz6I3y8sdVC93oyzeZ2YcIuGucgT3mzFQN1QZwgJxe6GOpSHePckY8+idllZcBR30QrAKp1uR+UEupoHRzT2O3cMyicAnt1P7tifSxXrjNJwBBdQYEf78nSVfwgaXKKEByYTJVLhBxlBTVmtCdNg4+ERAFOK/UdIbxUDnUyBCFn/tCDY3JxyqzY9zHwpA/T6FEZKEm4rHD3UdufBWGS+IuAK+LtOt93gHi7jehZOImE7Cj+7MvXjZqK5FaHEKW/GrAPLIERJ5eGm7qsZXayaX18+CMFPgwOPUrA12/BeArdASMhmrNpZUkUTO0PJpDOAEVem/oHjhUhjOqe8gRkdL+axxcI74CeUBL4ZvKaAvepDngvXQo9Tpf0UT3kXnpUynACMcaZjHZAJxPQIQRm5dOVkmr4+Q3vxShxepkmUBjmZBewMFceOXKjQZTOmso+lIAHPP5Bg+m42oeDL7RfkGUOZU30Y/fU1X2MiPXdRIrdT5/UP+6BZolYhVDIpZEr7mpx3Lc04Xu5Azd4v997aibKWpYld6Rtyyuhc38aGS5uUXAJbjplAyQqsdL+5kx3OjXscHohd4kC9RC35PbK/0EcrmY9SfXuEiFlOpTOQGFM60iVqPloZhYdkXkNWoKJ+xRkMSRt/BSu0517kcRC0OTdcBBFSP75sToecWMu9v+GJKvb8jMWzklpkOk5xoig3ntulCmn3EWbZb34ODSHeUBnlcK0AbkRFuO2yjvixsLe0jUoYJUPQNp12HKAms0pFfEHO/yxPPUWeXTCIzbmBoZ4NhMnabxEbG+AocmKT/YR8lsjmlXUBDTRfe5nVX4zq63Rt+zycCgD0YAw4FAlZJcJssgDUd+sGWuueTuL+6+8UNT5lTzhu8UA0s2GmXcMBzUNA5kg68+/XJ7PlmSIYwP2YpBdWtkmmsMNI7vVK6D6TVwTXj2KqL8LSgvQap85oTP3Alg4TUsDBs+LA= var onError = function(error) { document.getElementById("enc_error").innerHTML = "password error!" }; function decrypt() { var passwd = document.getElementById("enc_pwd_input").value; console.log(passwd); doDecrypt(passwd, onError); }]]></content>
  </entry>
  <entry>
    <title><![CDATA[hexo杂记]]></title>
    <url>%2Fhexo%E6%9D%82%E8%AE%B0.html</url>
    <content type="text"><![CDATA[[摘要]记录一些hexo小优化记录,并不全(可以说非常不全),之前自己忘记记录了,我也很烦… 之前搭建hexo博客没有进行记录真的是失策了sad,搭建和优化可以参考下这篇文章,感谢博主,这里做搬运方便自己整理.至于其他部分的优化我也记不清了,sad again. 介绍下gp圖片並列顯示在內文要有效果要，要先修改一下themes\next\source\css_common\components\tags\group-pictures.styl文件，註解或刪除其中兩項。1234567mark:2,4.page-post-detail .post-body .group-picture-column { // float: none; margin-top: 10px; // width: auto !important; img { margin: 0 auto; }} 要隱藏首頁的標題列只顯示圖的話，文章的 Header 要加入 type: “picture”，如下範例对于其排列方式其实没有很复杂,就是一行最多3图这样子. 加入背景壁纸 文件位置：~/blog/themes/next/layout/layout.swig12345$("body").backstretch("http://pe314yl7h.bkt.clouddn.com/static/images/background.jpg"); undefined Font Awesome 的图标next 主题所采用的是Font Awesome图标样式,具体可见图标地址 下载 下载变大 33% 下载两倍大 上传123- 删除+ 添加这些都是diff的功能 note标签defaultprimarysuccessinfowarningdanger当然也可以用如下方式1234{% label default@default %}{% label primary@primary %}...@ 前面的是label的名字，后面的是要显示的文字## tabs选项卡-1为隐藏选项卡内容选项卡 1选项卡 2选项卡 3这是选项卡 1 这是选项卡 2 这是选项卡 3 ## btn按钮1{% btn https://www.baidu.com, 点击下载百度, download fa-lg fa-fw %}点击下载百度## 自定义数字块12345678910// 自定义的数字块span#inline-toc { display: inline-block; border-radius: 80% 100% 90% 20%; background-color: rgb(227, 242, 253); color: #555; padding: 0.05em 0.4em; margin: 2px 5px 2px 0px; line-height: 1.5;}1.11.## AES加密虽然我是挂在在github上所以加密公开了,基本白瞎.但是不排除之后有时间就自己挂在到自己的网站上,so…其实步骤很简单1npm install hexo-encrypt一键安装完后,打开站点目录下的package.json文件，加入以下代码：(版本对应自己当前的版本不要强抄)1"hexo-encrypt": "^0.5.0",之后打开站点目录下的_config.yml ，加入以下代码：123#encryptencrypt: password: 123456文章的头部加入以下代码就ok了12encrypt: trueenc_pwd: 123456## 图像懒加载1npm install hexo-lazyload --saveHexo 目录的配置文件_config.yml 中添加配置:1234567lazyload: enable: true # className: #可选 # loadingImg: #可选 /images/loading.png(这个是缓冲图像)## 指定页面作为主业其实很简单,就是找到layout那边的index.swig备份下,然后把你想要的页面的swig替换成index就ok了]]></content>
  </entry>
  <entry>
    <title><![CDATA[XZ1国行转carbonRom分享]]></title>
    <url>%2FXZ1%E5%9B%BD%E8%A1%8C%E8%BD%ACcarbonRom%E5%88%86%E4%BA%AB.html</url>
    <content type="text"><![CDATA[[摘要] 简介近期主力机是8p，很均衡的手机，续航不错，屏幕不错，除了屏占比，和无法湿手解锁，其他我hin满意。好久没玩安卓了，几年前换ios是因为安卓虽然好玩但确实谈不上好用，生态问题没办法。最近想入手一个玩玩。其实还是有很多要求，比如：屏幕要求lcd亮度要够（屏幕就是一直常亮，oled就发高烧了），开放bl锁可以刷第三方rom，支持防水，外放要ok……但没有要求续航和拍照要多好，唉，我真是个hǐn麻烦滴人。本来打算xz2、s9+、魅族16（虽然他好像完全不符合我之前要求的，但是2698要啥自行车）。但最后入了xz1，很迷，考虑到之后要配主机并且好像还挺符合我的要求（都是借口），so我的机器是国行xz1（G8342 Dual），未解锁，下面开始洗刷刷。 国行如果要安装第三方rom则需要先安装港版固件（因为有谷歌框架，可以开放oem锁，只有打开了OEM锁才有更高权限去刷第三方rom），我们一步步道来。 1. 刷入港版我们需要在PC中进行操作，参考来自机锋论坛：国行xz1输入港版固件教程，感谢。这里仅做归纳整理。首先先下载好如下几个工具（windows）： flashtool 港版rom（该已经修改完成，不用再去修改） newflasher（这里不下也可以，应为已经在港版rom中整理好了，直接在包中运行即可） 1.1 安装好flashtool驱动下载完flashtool后，默认路径在c根目录中，打开找到drivers文件夹，安装里面的驱动 打开后勾选安装蓝灯和绿灯模式，下一步安装会发现驱动安装签证错误，整理就需要关闭windows强制签名，操作流程如下： 打开设置 选择更新和安全 找到恢复选项 选择立即重启 重启后选择疑难解答 选择高级选项 选择启动设置 选择立即重启，重启后按F7 重新安装flashtool中的驱动 勾选蓝灯和绿灯，选择始终安装此程序 1.2 刷入港版rom解压下载好的港版rom文件 手机要先进入绿灯模式连接电脑，即关机后长按音量-，再连接数据线到电脑（蓝灯是音量+） 打开文件夹，运行newflasher即可（因为该rom已经修改好了，所以可以直接运行） 根据论坛介绍：如果是原封的rom话，解压后需要对boot文件夹里面的文件后缀名.sinb改为sin和tab改为ta。还有解压后根目录的boot_delivery.xml放回boot里面，最重要的是在根目录下删除simlock.ta 稍等几分钟就会提示刷机完成，刷完后直接开机，按照提示一步步设置。成功进入系统UI界面就算刷入成功。 废话：港版rom是自带google的，chrome是默认浏览器（好评），Chrome无敌，其实我觉得还不错。当时在犹豫要不要不要刷了，其实港版系统确实还不错，但还是刷了，我比较喜欢原生系统设计风格（感觉UI比较圆滑，色块比较顺眼，毕竟颜值第一：花母鸡：）。 2. 打开OEM锁刷完港版rom后，下载shadowsocks，科学上网登陆google账号，成功登陆后打开开发者选项可以看到里面有个OEM开关，打开即可。 3. 解锁bl解锁bl需要先去 sony官网获取解锁码 按照官网的提示一步步进行 输入IMEI码和邮箱可以获取解锁码（这里还是要进行全局科学上网才可以成功获得解锁码）。获得解锁码后，下载如下解锁工具： sony解锁工具 下载完成后，手机关机后长按音量+，再连接电脑就会进入fastboot蓝灯模式。双击文件夹里面的 输入之前获取到的解锁码就可以了，成功的话如下图所示： 解锁后开机会发现有个手机已经unlock不安全的警告，会在5s后重启，这样就表示已经成功解锁了bl锁。 4. 刷入第三方carbonRom我个人还是比较喜欢这个系统的，比较简单清爽。系统基于android 8.1，可以去 carbonRom-xz1下载最新的版本固件。如下是刷机准备： 下载carbonRom固件 ABD命令工具 刷入twrp.img（版本：twrp-3.2.1-0-poplar-8），用于刷机 magisk刷机包，用于root MindTheGapps-8.1.0-arm64-20180808_153856，用于google服务（我还是比较喜欢谷歌服务的所以我会装） 谷歌服务来自 XDA论坛-carbonRom，下载地址：mindTheGapps-8.1.0 建议：刷机包这些可以直接使用我提供的，因为这样可以保证google框架可以刷入，刷入成功后手机可以通过carbonRom自带的ota进行升级。 下载完成后开始下面的操作： 在手机新建文件夹rom，把carbonRom固件、magisk包，mindTheGapps包这三个拷贝到手机文件夹里。 打开abd命令的platform-tools文件夹，把我们下载好的twrp.img文件夹放入里面。 手机进入蓝灯模式连接到电脑，打开platform-tools文件夹，按住shift键+鼠标右键打开shell，直接运行run.bat，或者手动输入运行命令： 1.\fastboot flash recovery twrp.img 即可刷入twrp刷机工具，出现如下图： 即表示刷入成功。手机关机后按住音量-和电源键不放就可以进入刷机模式（这个时间有点长，因为前期的unlock的警告都占用了一些时间）。 重要：进入刷机模式第一件事就是要备份efs和boot和oem（手机基带等信息） EFS是用来存取手机IMEI串号、无线网卡MAC地址以及网络设置的重要信息组件，目前发现升级不明基带的ROM以及频繁刷机或者错误的双清方法会导致EFS信息丢失，IMEI串号被清空或置零，基带未知，无法使用移动网络等故障。） 进入刷机模式后，不要清空任何数据，就直接刷carbonRom+magisk（先不刷mindTheGapps） 进入系统后查看系统基带等是否都在，可不可以连接网络，可以的话就继续进入恢复模式去刷入mindTheGapps。如果不可以就直接进入恢复模式去恢复之前备份的efs和oem，顺便刷入mindTheGapps。 重要！！！！！！！！！！！！！！！！！ 打开可能会发现连接不了网络，我试了好几遍重刷，都没用：惊讶： 后来直接在上面第六步后直接恢复出厂设置全部置空，重新进入系统会发现google框架设置界面（nice），可以连接网络了，intesting：angry： 5. xposed框架xposed地址 xposed-install/uninstall 地址 可以下载我的： xposed-v90-sdk27-arm64-beta1 但我建议没有特殊需求就不用刷xposed，软件很容易会出现停止运行的现象，很烦人。 结语：优化下手机还是很漂亮的，比较喜欢鬼刀大佬的图，设为了壁纸，喜欢的话直接搜鬼刀的自己找就可以了。安装了手势软件x home bar，比较三大金刚还是很感人，本来才5.2inch，我觉得还是很有必要的。刷完后运行流畅，很快，还是很喜欢这个系统，也有root，挺好玩。吐槽下，xz1的相机是真的渣，很迷，不过我也不会拿它去拍照也无所谓了。还有一点是，我不知道为什么炉石打不开了，直接黑屏，港版和国行rom上面是ok的，em……..无所谓了。 本篇完结，希望大家喜欢，撒花 hk=>start: 1. 刷入港版 oem=>operation: 2. 打开oem锁 bl=>operation: 3. 解bl锁 carbon=>operation: 4. 刷入第三方carbonRom e=>end hk->oem->bl->carbon->e{"theme":"simple","scale":1,"line-width":2,"line-length":10,"text-margin":10,"font-size":12} var code = document.getElementById("flowchart-0-code").value; var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value)); var diagram = flowchart.parse(code); diagram.drawSVG("flowchart-0", options);1=>operation: 1.1 安装好flashtool驱动 2=>operation: 1.2 刷入港版系统 1->2{"theme":"simple","scale":1,"line-width":2,"line-length":10,"text-margin":10,"font-size":12} var code = document.getElementById("flowchart-1-code").value; var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-1-options").value)); var diagram = flowchart.parse(code); diagram.drawSVG("flowchart-1", options);]]></content>
  </entry>
  <entry>
    <title><![CDATA[个人收藏]]></title>
    <url>%2F%E4%B8%AA%E4%BA%BA%E6%94%B6%E8%97%8F.html</url>
    <content type="text"><![CDATA[[摘要]这主要是一些简单的个人收藏,没什么阅读价值🌚 喜欢的表情包 设计不错的网站其实我觉得Markdown Preview Enhanced link 这个网站的文档说明很好看，很有设计感 ，还不错。今天才发现这个设计文档是来自docsify的模板,这个设计看起来真的很舒服 👀]]></content>
  </entry>
  <entry>
    <title><![CDATA[完整的深度学习项目实操过程]]></title>
    <url>%2F%E5%AE%8C%E6%95%B4%E7%9A%84%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%93%8D%E8%BF%87%E7%A8%8B.html</url>
    <content type="text"><![CDATA[[摘要]🤔… hello大家好,又见面啦,今天给大家介绍的是新作品,欢迎大家阅读哦]]></content>
      <categories>
        <category>深度学习</category>
        <category>caffe</category>
        <category>实操</category>
      </categories>
      <tags>
        <tag>caffe</tag>
        <tag>深度学习</tag>
        <tag>matalb</tag>
        <tag>实操</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[vps搭建ss]]></title>
    <url>%2Fvps%E6%90%AD%E5%BB%BAss.html</url>
    <content type="text"><![CDATA[[摘要]本文主要介绍了搭建vps服务器的过程，可实现ss科学上网，供大家参考。 对于ss大家可能并不陌生，毕竟科学上网还是要的。现如今VPN该凉的都凉了，所以需要搭建稳一点的服务器来进行科学上网还是要靠谱些。 1. 关于服务器的选择比较出名的服务器有Vultr和近几年比较便宜的搬瓦工 vultr地址：套餐推荐5$/m 搬瓦工地址：优惠码地址，最高6.25% 性价比套餐推荐年19.99$/y选KVM就好，有优惠码最高有6.25%优惠，还是很不错的。 资金ok下性价比高的是10G KVM 特价促销款 V3 - 洛杉矶 - CN2这个有对中国区域进行加速，年价格是29.99$/y，延迟也会低一些，同样可以使用优惠码优惠6.25%。 注意: Vultr服务器在去年推出了2.5/m这样一个套餐,看起来很便宜但实际上要求ipv6 only，也就是说你所在的当前运营商需要支持ipv6才可以连接到服务器，这个其实在国内还是不要选择的好，并不是所有运营地区支持ipv6。因此推荐5/m的套餐。 本教程选择的是搬瓦工，19.99刀一年，KVM，优惠6.25%，其实优惠码可以在网页代码里就找到，是暗藏的（该死的人类，不打折就不舒服he） 2.搭建选完自己的套餐后就checkout结账，还没注册也没关系，结账界面可以注册。支付方式可以选择Alipay支付宝 2.1.进入控制面板 进入后进入控制面板KiwiVM Control Panel 注意 : KiwiVM Control Panel 的初始密码是第一次发送给你邮箱的密码 第一步需要进行重装系统，选择途中的系统进行安装 2.2 安装ssr脚本我们通过ssh命令进入系统来进行ss环境搭建,这里我使用的系统环境是macOS.可以直接在iterm中进行ssh连接服务器,linux也可以.对于windows用户的同学直接使用putty来进入也是一样的. ssh命令 123> ssh -p "你的端口" root@"你的地址"> # " "代表该位置全替换成自己的,包括""> ps: 在iterm中可以添加快捷输入alias,因为我使用是zsh主题因此在~/.zshrc中,添加完成后要.如果是默认的就在/.bash_profile中,这里不做详细展开. 12> source ~/.zshhrc> 例如添加: 12> alias sb="ssh -p "你的端口" root@"你的地址""> 代表以后可以直接输入sb来运行自己的服务器 我们进入服务器后出现root@host ~]#,因为原来的密码冗长,输入passwd来进行修改为自己的密码,之后开始正式操作. 键入 12> wget --no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh> 如出现错误提示 bash: wget: command not found，可以先执行 yum -y install wget 命令。 123> chmod +x shadowsocks-all.sh> ./shadowsocks-all.sh 2>&1 | tee shadowsocks-all.log> 选择1.shadowsocks-python,之后会提示输入密码,这里就输入你想要设置的密码就好(尽量设置简单点,因为保不了之后可能会分享给自己的朋友对吧) 下一步会提示你输入端口,这里自行选择喜好数字进行输入 最后一步加密方式选择aes-256-cfb比较通用 安装过程需要点时间.注意最后的脚本完成提示要自己保存好(不然拿什么输入呢😳) 2.3. 安装bbr魔改版原始的默认bbr会出现丢包情况,速度不是很理想.这里我们安装魔改过后的bbr内核就会好很多. 安装过程参考博客:BBR+BBR魔改+Lotsever(锐速)一键脚本 for Centos/Debian/Ubuntu 安装内核 12> wget -N --no-check-certificate "https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh" && chmod +x tcp.sh && ./tcp.sh> 选择1安装魔改版内核 安装完成后重启服务器,在使用./tcp.sh命令接着操作 重新进入选择4或者5来进行加速,之后也可以再运行8来进配置优化 这样内核算是安装完成,注意:安装过程中删除内核出现 需要选择NO 2.4. 配置ipv6默认KVM是没有开启ipv6的,实际上可以开启,不过需要我们自己配置 参考文章 给搬瓦工 KVM 版 VPS 配置 IPv6 支持（基于 Linux CentOS 7） 文章写得很详细,这里仅仅做简要归纳. 首先先 注册 点击左侧的Create Regular Tunnel 输入 VPS 的IP 地址和选择自己的服务器地区 切换到Example Configurations,选择Linux-net-tools 打开ssh,键入上一步骤内的代码 完成上述命令后，可以运行 ping6 google.com，测试是否能 ping 通，可以的话就ok🌶 下一步要设置开机启动 12yum -y install vimvim /root/ipv6.sh 在里面输入第四步骤代码内的内容再保存 123# 增加可执行权限chmod +x /root/ipv6.shvim /etc/rc.d/rc.local 在最下方加入sh /root/ipv6.sh再保存，这样重启过后也有ipv6了 3. 下载对应客户端 ios可以考虑去商店下载wingy，如果商店下载不了就去手机助手商店里下载也是可以的。 其他的操作系统可以考虑直接到 ishadow 去下载最新版本。]]></content>
      <categories>
        <category>vps</category>
        <category>ss</category>
      </categories>
      <tags>
        <tag>vps</tag>
        <tag>ss</tag>
        <tag>搬瓦工</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[macOS High Sirra 10.13.6 caffe环境搭建]]></title>
    <url>%2FmacOS-High-Sirra-10-13-6-caffe%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html</url>
    <content type="text"><![CDATA[[摘要]这是一篇在mac中搭建caffe环境的教程，介绍了搭建过程中可能遇到的问题，并提供一定的解决方案供参考。 0.介绍+环境我是在anaconda2上搭建py27环境，该安装的环境安装好，需要注意的是如果python改为anaconda路径需要对caffe立面的需要到python的路径设定为anaconda路径。caffe对anaconda的支持还是很友好的。 注:安装过程中可能遇到的问题在问题汇总看下有没有遇到类似的问题 在每次进入终端都需要通过命令激活anaconda的python路径 12> source activate py27> 0.1. 安装Anaconda https://www.continuum.io/downloads 选择需要的版本。 export PATH=”/anaconda2/bin:$PATH” 12> 复制anaconda2到/usr/local/Cellar> 12> export DYLD_FALLBACK_LIBRARY_PATH=/usr/local/Cellar/anaconda2:/usr/local/lib:/usr/lib> 0.2. 安装homebrew terminal键入 12> > /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"> > 遇到Warning: /usr/local/bin is not in your PATH. 12> > export PATH=/usr/local/bin:$PATH> > 安装后再次打开终端如果出现-bash brew is not exist` 12> > sudo vim .bash_profile> > 添加export PATH=/usr/local/bin:$PATH 然后 12> > source .bash_profile> > 安装基本依赖 1234> > brew install -vd snappy leveldb gflags glog szip lmdb> > brew tap homebrew/science> > brew install hdf5 opencv> > 123456> > for x in snappy leveldb gflags glog szip hdf5 lmdb homebrew/science/opencv;> > do> > brew uninstall $x;> > brew install --fresh -vd $x;> > done> > 1234> > brew uninstall boost boost-python; brew install --fresh -vd boost boost-python> > brew link --force boost> > brew link --force boost-python> > 注意这里不用安装protobuf因为protobuf是在conda中安装的 1234> > conda uninstall lib> > conda uninstall protobuf> > conda install -c anaconda protobuf> > 0.3. 安装cmake 去官网下载安装即可，DMG格式直接双击安装https://cmake.org/download/ 设置永久路径 sudo “/Applications/CMake.app/Contents/bin/cmake-gui” –install 1.caffe clone 1234> git clone https://github.com/BVLC/caffe.git> cd caffe> cp Makefile.config.example Makefile.config> 可以一气呵成 我在mac上没有用到cuda，用的是cpu。确实非常非常慢，反正我是受不了的啦，还是买台台式跑的好。 好，继续。 修改makefile.config也就是刚刚拷出来的，改他 关键点 12345678910111213141516171819202122> CPU_ONLY := 1> BLAS := open #当然需要brew安装下openblas> > #这里对照下是不是自己的路径> BLAS_INCLUDE := /usr/local/Cellar/openblas/0.3.1/include> BLAS_LIB := /usr/local/Cellar/openblas/0.3.1/lib> > #然后把下面的python注释掉,毕竟我们用的是anaconda的> #PYTHON_INCLUDE := /usr/include/python2.7 \> #/usr/lib/python2.7/dist-packages/numpy/core/include> > #anaconda的路径需要修改成自己的,自己看下自己的路径在哪里对照着修改就好> ANACONDA_HOME := /anaconda2> PYTHON_INCLUDE := $(ANACONDA_HOME)/include \> $(ANACONDA_HOME)/include/python2.7 \> $(ANACONDA_HOME)/lib/python2.7/site-packages/numpy/core/include> PYTHON_LIB := $(ANACONDA_HOME)/lib> > #看下路径是不是自己的> INCLUDE_DIRS := $(PYTHON_INCLUDE) /usr/local/include> LIBRARY_DIRS := $(PYTHON_LIB) /usr/local/lib /usr/lib /usr/local/Cellar/boost-python/1.67.0/lib> 2. 安装过程 需要先cd打开自己的caffe目录，修改caffe/python里面的requirements.txt 打开,然后修改python-dateutil>=1.4,=1.4就好,不然会重装python-dateutil版本变成1.5导致其他安装错误 进入里面的python路径并执行如下命令 12> for req in (cat requirements.txt); do pip install req; done> 看下报错里面自己缺了什么,缺了就需要补缺 如果遇到protobuf问题看下问题汇总出有没有出现类似情况供参考 在caffe根目录下新建build文件夹(因为直接在根目录里进行make的话很容易就挂了) 打开cafffe根目录下的makefile 12345> 把:PYTHON_LIBRARIES ?= boost_python python2.7> 改为:PYTHON_LIBRARIES ?= boost_python27 python2.7> 再> export PYTHONPATH=/Users/achunorigin/caffe/build/lib:$PYTHONPATH> 现在根目录下进行一次make pycaffe 12345> rm -r build> mkdir build> cd build> cmake ..> 123456> 然后打开修改CMakeCache.txt的CPU_...=ON,最好还是要修改下> PYTHON_INCLUDE_DIR:PATH=/anaconda2/include/python2.7> PYTHON_LIBRARY:FILEPATH=/anaconda2/lib/libpython2.7.dylib> 还有caffeconfig.cmake中的set(Caffe_CPU_ONLY 改为ON)> 改完后再cmake ..一次> 遇到:CMake Error at CMakeLists.txt:104 (add_dependencies): The dependency target "pycaffe" of target "pytest" does not exist.不管他 记得先加入caffe路劲到python不然在pytest出会报错 先open ~/.bash_profile,类似如下内容是比较ok的,没有的话就对应着加进去 12345> export PATH="/anaconda2/bin:$PATH"> export PATH=/usr/local/bin:$PATH> export PYTHONPATH=/Users/achunorigin/caffe/python:$PYTHONPATH> export CAFFE_ROOT="/Users/achunorigin/caffe"> 之后保存并source ~/.bash_profile 12345> 在build目录下面:> make all> make runtest> make pytest> 若python import caffe 没有报错的话还是比较稳的,前提pytest要过 3.问题汇总protobuf问题 之前在make all 步骤经常就是protobuf那边出错,在1%和2%之间就错了 这里其实就是protobuf版本问题出错: 因为brew install 了protobuf 系统自带的protobuf也install了protobuf cmake默认brew所安装的目录,也就是/usr/local/里面的bin啊include啊caller啊什么的 遇到protobuf问题就要卸掉之前所有有关的protobuf,然后: 1234> conda uninstall lib> conda uninstall protobuf> conda install -c anaconda protobuf> 打开anaconda目录 12345> sudo cp bin/protoc /usr/local/bin/> sudo rm -r /usr/local/include/google/protobuf/> sudo cp -r include/google/protobuf/ /usr/local/include/google/protobuf/> sudo cp -r lib /usr/local/> 这样路径就会被识别到 No module named_caffe` 123修改CmakeChache.txt里面为类似如下PYTHON_INCLUDE_DIR:PATH=/anaconda2/include/python2.7PYTHON_LIBRARY:FILEPATH=/anaconda2/lib/libpython2.7.dylib 最有可能的就是没有在caffe根目录下进行一次make pycaffe ld: library not found for -lboost_python 打开cafffe根目录下的makefile 12345> 把:PYTHON_LIBRARIES ?= boost_python python2.7> 改为:PYTHON_LIBRARIES ?= boost_python27 python2.7> 再> export PYTHONPATH=/Users/achunorigin/caffe/build/lib:$PYTHONPATH>]]></content>
      <categories>
        <category>caffe</category>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>caffe</tag>
        <tag>环境搭建</tag>
      </tags>
  </entry>
</search>
