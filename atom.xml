<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>连善淳</title>
  
  <subtitle>Achun</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-12-02T13:29:49.453Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Achun</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>书写规范与命名规则</title>
    <link href="http://yoursite.com/%E4%B9%A6%E5%86%99%E8%A7%84%E8%8C%83%E4%B8%8E%E5%91%BD%E5%90%8D%E8%A7%84%E5%88%99.html"/>
    <id>http://yoursite.com/书写规范与命名规则.html</id>
    <published>2018-12-02T12:48:46.000Z</published>
    <updated>2018-12-02T13:29:49.453Z</updated>
    
    <content type="html"><![CDATA[<html lang="en-us"><head></head><body><p></p><p class="description"><code>[摘要]</code></p><br><a id="more"></a><p></p><hr><p><code>代码规范来自alloyteam代码规范, 是腾讯团队的代码规范之一</code> <a href="http://alloyteam.github.io/CodeGuide/" target="_blank" rel="noopener">AlloyTeam代码规范</a></p><hr><div class="image-size-100"></div><p><code>项目命名:</code>my_project_name</p><p><code>目录命名:</code> 有复数结构时候还是要用<code>复数</code>命名, 例如scripts</p><p><code>js css scss html命名:</code> 也是和项目命名一样</p><hr><h3 id="html"><a href="#html" class="headerlink" title="html"></a>html</h3><ul><li><p>在属性上, 使用双引号不要使用单引号</p></li><li><p>属性的名字全部用小写用中划线来分割</p></li><li><p>在开头还是要简单地<code>doctype</code> 如 <!DOCTYPE html></p></li><li><p>主要用于语音和翻译工具使用</p></li><li><p>要<meta charset="UTF-8">字符编码 </p></li></ul><h3 id="属性顺序"><a href="#属性顺序" class="headerlink" title="属性顺序"></a>属性顺序</h3><ul><li>class</li><li>id 更加具体, <code>尽量少用</code></li><li>name</li><li>data-*</li><li>src….</li></ul><hr><h3 id="空格"><a href="#空格" class="headerlink" title="空格"></a>空格</h3><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#main</span> {</span><br><span class="line">    <span class="attribute">background</span>: gray;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span>, solid, gray <span class="meta">!important</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p>注释统一使用<code>/**/</code></p><h3 id="CSS命名"><a href="#CSS命名" class="headerlink" title="CSS命名"></a>CSS命名</h3><ul><li>类名用小写字母, <code>change_icon</code></li><li>id用驼峰</li><li>函数 变量 等用驼峰</li></ul><h3 id="CSS属性申明顺序"><a href="#CSS属性申明顺序" class="headerlink" title="CSS属性申明顺序"></a>CSS属性申明顺序</h3><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.main</span> {</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    </span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">100</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span>, solid, gray;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="attribute">font</span>: normal, <span class="number">13px</span>, <span class="string">"Helvetical Neue"</span>, sans-serif;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.5</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    </span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#399</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.8</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="颜色"><a href="#颜色" class="headerlink" title="颜色"></a>颜色</h3><p>使用十六进制<code>小写 简写</code></p><h3 id="属性简写"><a href="#属性简写" class="headerlink" title="属性简写"></a>属性简写</h3><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* not good */</span></span><br><span class="line"><span class="selector-class">.element</span> {</span><br><span class="line">    <span class="attribute">transition</span>: opacity <span class="number">1s</span> linear <span class="number">2s</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="selector-class">.element</span> {</span><br><span class="line">    <span class="attribute">transition-delay</span>: <span class="number">2s</span>;</span><br><span class="line">    <span class="attribute">transition-timing-function</span>: linear;</span><br><span class="line">    <span class="attribute">transition-durartion</span>: <span class="number">1s</span>;</span><br><span class="line">    <span class="attribute">transition-property</span>: opacity;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="SCSS"><a href="#SCSS" class="headerlink" title="SCSS"></a>SCSS</h3><p>提交的代码中不要有 <code>@debug</code>；</p><p>声明顺序：</p><ul><li><code>@extend</code></li><li>不包含 <code>@content</code> 的 <code>@include</code></li><li>包含 <code>@content</code> 的 <code>@include</code></li><li>自身属性</li><li>嵌套规则</li></ul><p><code>@import</code> 引入的文件不需要开头的’_’和结尾的’.scss’；</p><p>嵌套最多不能超过5层；</p><p><code>@extend</code> 中使用placeholder选择器；</p><p>去掉不必要的父级引用符号’&’。</p><p>发布的代码中不要有 <code>@import</code>；</p><p>尽量少用’*’选择器。</p><hr><p>用 <code>border: 0;</code> 代替 <code>border: none;</code>；</p><hr><h2 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h2><p>单行长度不要超过80</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* not good */</span></span><br><span class="line"><span class="keyword">for</span>(i0;i<<span class="number">6</span>;i++){</span><br><span class="line">x++;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i < <span class="number">6</span>; i++) {</span><br><span class="line">    x++;x++;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="空行"><a href="#空行" class="headerlink" title="空行"></a>空行</h3><ul><li>变量声明后（当变量声明在代码块的最后一行时，则无需空行）</li><li>注释前（当注释在代码块的第一行时，则无需空行）</li><li>代码块后（在函数调用、数组、对象中则无需空行）</li><li>文件最后保留一个空行</li></ul><h3 id="注释-1"><a href="#注释-1" class="headerlink" title="注释"></a>注释</h3><p>与css注释不同的是</p><p><code>/**/通常注释较为难懂的代码行, 或者可能存在错误的代码, 或者与业务逻辑紧密相关的代码</code></p><h3 id="引号与css也不同-最外层用’’"><a href="#引号与css也不同-最外层用’’" class="headerlink" title="引号与css也不同, 最外层用’’"></a>引号与css也不同, 最外层用’’</h3><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// not good</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="string">"test"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// good</span></span><br><span class="line"><span class="keyword">var</span> y = <span class="string">'foo'</span>,</span><br><span class="line">    z = <span class="string">'<div id="test"></div>'</span>;</span><br></pre></td></tr></tbody></table></figure><h3 id="变量命名"><a href="#变量命名" class="headerlink" title="变量命名"></a>变量命名</h3><ul><li>标准变量采用驼峰式命名（除了对象的属性外，主要是考虑到cgi返回的数据）</li><li>‘ID’在变量名中全大写</li><li>‘URL’在变量名中全大写</li><li>‘Android’在变量名中大写第一个字母</li><li>‘iOS’在变量名中小写第一个，大写后两个字母</li><li>常量全大写，用下划线连接</li><li>构造函数，大写第一个字母</li><li>jquery对象必须以’$’开头命名</li></ul><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> thisIsMyName;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> goodID;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reportURL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> AndroidVersion;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> iOSVersion;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> MAX_COUNT = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name</span>) </span>{</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// not good</span></span><br><span class="line"><span class="keyword">var</span> body = $(<span class="string">'body'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// good</span></span><br><span class="line"><span class="keyword">var</span> <sub>body = <span class="xml"><span class="tag"></<span class="name">sub</span>></span></span>(<span class="string">'body'</span>);</span><br></pre></td></tr></tbody></table></figure><h3 id="变量申明"><a href="#变量申明" class="headerlink" title="变量申明"></a>变量申明</h3><p>一个函数作用域中所有的变量声明尽量提到函数首部，用一个var声明，不允许出现两个连续的var声明。</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">doSomethingWithItems</span>(<span class="params">items</span>) </span>{</span><br><span class="line">    <span class="comment">// use one var</span></span><br><span class="line">    <span class="keyword">var</span> value = <span class="number">10</span>,</span><br><span class="line">        result = value + <span class="number">10</span>,</span><br><span class="line">        i,</span><br><span class="line">        len;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>, len = items.length; i < len; i++) {</span><br><span class="line">        result += <span class="number">10</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="undefined"><a href="#undefined" class="headerlink" title="undefined"></a>undefined</h3><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// not good</span></span><br><span class="line"><span class="keyword">if</span> (person === <span class="literal">undefined</span>) {</span><br><span class="line">    ...</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// good</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> person === <span class="string">'undefined'</span>) {</span><br><span class="line">    ...</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p class=&quot;description&quot;&gt;&lt;code&gt;[摘要]&lt;/code&gt;&lt;/p&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>div填充剩余宽度</title>
    <link href="http://yoursite.com/div%E5%A1%AB%E5%85%85%E5%89%A9%E4%BD%99%E5%AE%BD%E5%BA%A6.html"/>
    <id>http://yoursite.com/div填充剩余宽度.html</id>
    <published>2018-12-02T06:20:03.000Z</published>
    <updated>2018-12-02T12:42:29.660Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p></p><p class="description"><code>[摘要]</code></p><br><a id="more"></a><p></p><hr><div class="image-size-100"></div><p>要实现:</p><p><img src="https://ws3.sinaimg.cn/large/006tNbRwgy1fxsdoaw7xhj313i09s74w.jpg" alt=""></p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>></span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        #wrap{</span></span><br><span class="line"><span class="undefined">            padding-left: 200px; // 重点</span></span><br><span class="line"><span class="undefined">        }</span></span><br><span class="line"><span class="undefined">        .leftpart{</span></span><br><span class="line"><span class="undefined">            float:left; // 重点</span></span><br><span class="line"><span class="undefined">            width:200px;</span></span><br><span class="line"><span class="undefined">            margin-left:-200px; // 重点</span></span><br><span class="line"><span class="undefined">            height: 200px;</span></span><br><span class="line"><span class="undefined">            background-color:lightgreen;</span></span><br><span class="line"><span class="undefined">        }</span></span><br><span class="line"><span class="undefined">        .rightpart{</span></span><br><span class="line"><span class="undefined">            float: right;</span></span><br><span class="line"><span class="undefined">            width: 100%; // 重点</span></span><br><span class="line"><span class="undefined">            height: 200px;</span></span><br><span class="line"><span class="undefined">            background-color: lightseagreen;</span></span><br><span class="line"><span class="undefined">        }</span></span><br><span class="line"><span class="undefined">    </span><span class="tag"></<span class="name">style</span>></span></span><br><span class="line"></span><br><span class="line"><span class="tag"><<span class="name">div</span> <span class="attr">id</span>=<span class="string">"wrap"</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"rightpart"</span>></span>宽度自适应部分<span class="tag"></<span class="name">div</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"leftpart"</span>></span>width200的左边栏<span class="tag"></<span class="name">div</span>></span></span><br><span class="line"><span class="tag"></<span class="name">div</span>></span></span><br></pre></td></tr></tbody></table></figure><blockquote><p>如果要让footer在屏幕底部可以这样设置</p></blockquote><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#content</span> {</span><br><span class="line">    padding-bottom: 60px; // 意思是在底部预留出60px</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#footer</span> {</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    bottom: 0; // 关键</span><br><span class="line">    left: 0; // ie下一定要记得</span><br><span class="line">    height: 60px; // 这也是一定要写的</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p class=&quot;description&quot;&gt;&lt;code&gt;[摘要]&lt;/code&gt;&lt;/p&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>javaScript整理</title>
    <link href="http://yoursite.com/javaScript%E6%95%B4%E7%90%86.html"/>
    <id>http://yoursite.com/javaScript整理.html</id>
    <published>2018-09-10T02:49:23.000Z</published>
    <updated>2018-09-10T14:50:12.854Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p></p><p class="description"><code>[摘要]</code></p><br><a id="more"></a><p></p><hr><p><code>对象</code>，基本上 JavaScript 里的任何东西都是对象，而且都可以被储存在变量里。<br></p><figure class="highlight ebnf"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">var myVariable</span> = <span class="string">'Bob'</span>;</span><br><span class="line"><span class="attribute">myVariable</span> = <span class="string">'Steve'</span>;</span><br></pre></td></tr></tbody></table></figure><p></p><blockquote><p>2018年09月10日20:08:30</p></blockquote><p>margin最外层,如果设置两个参数就是代表上下和左右,auto是调整到居中显示,默认是四个从上右下左来的,</p><div class="image-size-100"></div></body></html>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p class=&quot;description&quot;&gt;&lt;code&gt;[摘要]&lt;/code&gt;&lt;/p&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>软件开发技术与应用</title>
    <link href="http://yoursite.com/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%BA%94%E7%94%A8.html"/>
    <id>http://yoursite.com/软件开发技术与应用.html</id>
    <published>2018-09-10T01:33:32.000Z</published>
    <updated>2018-09-10T02:54:09.751Z</updated>
    
    <content type="html"><![CDATA[<html><head><script src="/js/crypto-js.js"></script><script>function doDecrypt (pwd, onError) {console.log('in doDecrypt');const txt = document.getElementById('enc_content').innerHTML;let plantext;try {const bytes = CryptoJS.AES.decrypt(txt, pwd);var plaintext = bytes.toString(CryptoJS.enc.Utf8);} catch(err) {if(onError) {onError(err);}return;}document.getElementById('enc_content').innerHTML = plaintext;document.getElementById('enc_content').style.display = 'block';document.getElementById('enc_passwd').style.display = 'none';if(typeof MathJax !== 'undefined') {MathJax.Hub.Queue(['resetEquationNumbers', MathJax.InputJax.TeX],['PreProcess', MathJax.Hub],['Reprocess', MathJax.Hub]);}}</script></head><body><div id="enc_content" style="display:none">U2FsdGVkX19vwSCPS2u3SXDcFNmWZNgeKVNjyvXnEFC2+YF1k4XvrKSVaqFfPXqIlAyKmDvueRE2jjv0j5T/qWIkR/ClPi4rwfQ2Q502NkKjnWhqeR8j1gekv55cJreoUux1ENdhmlG7k4OPGDHTa2yIxv6q7rbtxbpBffBTPJP6xjtkxF6Cl3NkXxglBu7rxJn7WJSiWxXHyH2toOyKAX25fh1Iahjb7OsJF+lmH/g9y4A2xzoqyeBk3r8SK/gRdZBCUD5iu/qU5gtQFGKpyQVFIJq6Ua5157+vBcVOUxOQLe4edTPZUJZp872N5p8gIAxgRAOQB+s5jckmclF6v95wGfwWrxS8LKUIVVpp/ehEoy64ZsQprQJjpTK3MTtptcpl/ayp7BP9e8VUlswkRO9YLgt4w95ONkhj1dGc6kK6nmEz3PnCtiV51UTLsWhMRDvX0DwlkMFnrrxORBYasufmgVK4gky85q6WPt9DNx2sTCQqdrxCO/9Q1uf6yrP9VD6v6TOX7A35q4WoBogB7yMpvFi4jPgQ88WY2pClHuWWE0Co5icNykB3y80KdylOVesT1Wzp+tkKBOcjjeUJtMTtZrIJi3LZnDjXLtWNiOnHfx+7oO8GzRf65YwRQBXXqqkb1sms/d2TYL56uD/c8YvmRStIwVQi3fTz/P55S4xHEuUVCeE6WxCfCISAmlvfU9J1ztP78uuPJiY/Uii2Ly8nV90SJpI0iTWj+/N378j4kcICKCoaTBDqYTcuHZbMAfPA+wLCO65jHq6L0lJRoIjLQHHAz6I3y8sdVC93oyzeZ2YcIuGucgT3mzFQN1QZwgJxe6GOpSHePckY8+idllZcBR30QrAKp1uR+UEupoHRzT2O3cMyicAnt1P7tifSxXrjNJwBBdQYEf78nSVfwgaXKKEByYTJVLhBxlBTVmtCdNg4+ERAFOK/UdIbxUDnUyBCFn/tCDY3JxyqzY9zHwpA/T6FEZKEm4rHD3UdufBWGS+IuAK+LtOt93gHi7jehZOImE7Cj+7MvXjZqK5FaHEKW/GrAPLIERJ5eGm7qsZXayaX18+CMFPgwOPUrA12/BeArdASMhmrNpZUkUTO0PJpDOAEVem/oHjhUhjOqe8gRkdL+axxcI74CeUBL4ZvKaAvepDngvXQo9Tpf0UT3kXnpUynACMcaZjHZAJxPQIQRm5dOVkmr4+Q3vxShxepkmUBjmZBewMFceOXKjQZTOmso+lIAHPP5Bg+m42oeDL7RfkGUOZU30Y/fU1X2MiPXdRIrdT5/UP+6BZolYhVDIpZEr7mpx3Lc04Xu5Azd4v997aibKWpYld6Rtyyuhc38aGS5uUXAJbjplAyQqsdL+5kx3OjXscHohd4kC9RC35PbK/0EcrmY9SfXuEiFlOpTOQGFM60iVqPloZhYdkXkNWoKJ+xRkMSRt/BSu0517kcRC0OTdcBBFSP75sToecWMu9v+GJKvb8jMWzklpkOk5xoig3ntulCmn3EWbZb34ODSHeUBnlcK0AbkRFuO2yjvixsLe0jUoYJUPQNp12HKAms0pFfEHO/yxPPUWeXTCIzbmBoZ4NhMnabxEbG+AocmKT/YR8lsjmlXUBDTRfe5nVX4zq63Rt+zycCgD0YAw4FAlZJcJssgDUd+sGWuueTuL+6+8UNT5lTzhu8UA0s2GmXcMBzUNA5kg68+/XJ7PlmSIYwP2YpBdWtkmmsMNI7vVK6D6TVwTXj2KqL8LSgvQap85oTP3Alg4TUsDBs+LA=</div><div id="enc_passwd"> <input id="enc_pwd_input" type="password" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解 密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div><script>var onError = function(error) {document.getElementById("enc_error").innerHTML = "password error!"};function decrypt() {var passwd = document.getElementById("enc_pwd_input").value;console.log(passwd);doDecrypt(passwd, onError);}</script></div></body></html>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p class=&quot;description&quot;&gt;&lt;code&gt;[摘要]&lt;/code&gt;&lt;/p&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>hexo杂记</title>
    <link href="http://yoursite.com/hexo%E6%9D%82%E8%AE%B0.html"/>
    <id>http://yoursite.com/hexo杂记.html</id>
    <published>2018-09-06T13:24:45.000Z</published>
    <updated>2018-09-09T14:25:05.509Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p><span class="description"><code>[摘要]</code></span>记录一些hexo小优化记录,并不全(可以说非常不全),之前自己忘记记录了,我也很烦…<br><a id="more"></a></p><hr><p>之前搭建hexo博客没有进行记录真的是失策了sad,搭建和优化可以参考下<a href="https://reuixiy.github.io/technology/comput  er/computer-aided-art/2017/06/09/hexo-next-optimization.html" target="_blank" rel="noopener">这篇文章</a>,感谢博主,这里做搬运方便自己整理.至于其他部分的优化我也记不清了,sad again.</p><h2 id="介绍下gp"><a href="#介绍下gp" class="headerlink" title="介绍下gp"></a>介绍下gp</h2><p>圖片並列顯示<br>在內文要有效果要，要先修改一下themes\next\source\css_common\components\tags\group-pictures.styl文件，註解或刪除其中兩項。<br></p><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">mark</span>:<span class="number">2</span>,<span class="number">4</span></span><br><span class="line"><span class="selector-class">.page-post-detail</span> <span class="selector-class">.post-body</span> <span class="selector-class">.group-picture-column</span> {</span><br><span class="line">  <span class="comment">// float: none;</span></span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="comment">// width: auto !important;</span></span><br><span class="line">  <span class="selector-tag">img</span> { <span class="attribute">margin</span>: <span class="number">0</span> auto; }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p>要隱藏首頁的標題列只顯示圖的話，文章的 Header 要加入 type: “picture”，如下範例<br>对于其排列方式其实没有很复杂,就是一行最多3图这样子.</p><h2 id="加入背景壁纸"><a href="#加入背景壁纸" class="headerlink" title="加入背景壁纸"></a>加入背景壁纸</h2><blockquote><p>文件位置：~/blog/themes/next/layout/layout.swig<br></p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdnjs.cloudflare.com/ajax/libs/jquery-backstretch/2.0.4/jquery.backstretch.min.js"</span>></span><span class="undefined"></span><span class="tag"></<span class="name">script</span>></span></span><br><span class="line"><span class="tag"><<span class="name">script</span>></span><span class="undefined"></span></span><br><span class="line"><span class="javascript">$(<span class="string">"body"</span>).backstretch(<span class="string">"http://pe314yl7h.bkt.clouddn.com/static/images/background.jpg"</span>);</span></span><br><span class="line"><span class="undefined"></span><span class="tag"></<span class="name">script</span>></span></span><br><span class="line"><span class="tag"></<span class="name">body</span>></span></span><br></pre></td></tr></tbody></table></figure><p></p></blockquote><blockquote class="blockquote-center">undefined</blockquote><h2 id="Font-Awesome-的图标"><a href="#Font-Awesome-的图标" class="headerlink" title="Font Awesome 的图标"></a>Font Awesome 的图标</h2><p>next 主题所采用的是<code>Font Awesome</code>图标样式,具体可见<a href="https://fontawesome.com/v4.7.0/icons/" target="_blank" rel="noopener">图标地址</a></p><ul><li><i class="fa fa-download"></i> 下载</li><li><i class="fa fa-download fa-lg"></i> 下载变大 33%</li><li><i class="fa fa-download fa-2x"></i> 下载两倍大    </li><li><i class="fa fa-cloud-upload"></i> 上传<figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- 删除</span><br><span class="line">+ 添加</span><br><span class="line">这些都是diff的功能</span><br></pre></td></tr></tbody></table></figure></li></ul><h2 id="note标签"><a href="#note标签" class="headerlink" title="note标签"></a>note标签</h2><div class="note default"><p>default</p></div><br><div class="note primary"><p>primary</p></div><br><div class="note success"><p>success</p></div><br><div class="note info"><p>info</p></div><br><div class="note warning"><p>warning</p></div><br><div class="note danger"><p>danger</p></div><br>当然也可以用如下方式<br><figure class="highlight dockerfile"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">{% <span class="keyword">label</span><span class="bash"> default@default %}</span></span><br><span class="line"><span class="bash">{% label primary@primary %}</span></span><br><span class="line"><span class="bash">...</span></span><br><span class="line"><span class="bash">@ 前面的是label的名字，后面的是要显示的文字</span></span><br></pre></td></tr></tbody></table></figure><br><br>## tabs选项卡<br><code>-1</code>为隐藏选项卡内容<br><div class="tabs" id="选项卡"><ul class="nav-tabs"><li class="tab"><a href="#选项卡-1">选项卡 1</a></li><li class="tab active"><a href="#选项卡-2">选项卡 2</a></li><li class="tab"><a href="#选项卡-3">选项卡 3</a></li></ul><div class="tab-content"><div class="tab-pane" id="选项卡-1"><p><strong>这是选项卡 1</strong></p></div><div class="tab-pane active" id="选项卡-2"><p><strong>这是选项卡 2</strong></p></div><div class="tab-pane" id="选项卡-3"><p><strong>这是选项卡 3</strong></p></div></div></div><br>## btn按钮<br><figure class="highlight vim"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% btn http<span class="variable">s:</span>//www.baidu.<span class="keyword">com</span>, 点击下载百度, download fa-<span class="keyword">lg</span> fa-fw %}</span><br></pre></td></tr></tbody></table></figure><br><br><a class="btn" href="https://www.baidu.com" target="_blank" rel="noopener"><i class="fa fa-download fa-lg fa-fw"></i>点击下载百度</a><br>## 自定义数字块<br><figure class="highlight scss"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 自定义的数字块</span></span><br><span class="line"><span class="selector-tag">span</span><span class="selector-id">#inline-toc</span> {</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">80%</span> <span class="number">100%</span> <span class="number">90%</span> <span class="number">20%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: rgb(<span class="number">227</span>, <span class="number">242</span>, <span class="number">253</span>);</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#555</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0.05em</span> <span class="number">0.4em</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">2px</span> <span class="number">5px</span> <span class="number">2px</span> <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.5</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><br><br><span id="inline-toc">1.</span><br><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">span</span> <span class="attr">id</span>=<span class="string">"inline-toc"</span>></span>1.<span class="tag"></<span class="name">span</span>></span></span><br></pre></td></tr></tbody></table></figure><br><br>## AES加密<br>虽然我是挂在在github上所以加密公开了,基本白瞎.但是不排除之后有时间就自己挂在到自己的网站上,so…<br>其实步骤很简单<br><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-<span class="keyword">encrypt</span></span><br></pre></td></tr></tbody></table></figure><br><br>一键安装完后,打开站点目录下的package.json文件，加入以下代码：(版本对应自己当前的版本不要强抄)<br><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"<span class="selector-tag">hexo-encrypt</span>": "^0<span class="selector-class">.5</span><span class="selector-class">.0</span>",</span><br></pre></td></tr></tbody></table></figure><br><br>之后打开站点目录下的_config.yml ，加入以下代码：<br><figure class="highlight dts"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#encrypt</span></span><br><span class="line"><span class="symbol">encrypt:</span></span><br><span class="line"><span class="symbol">  password:</span> <span class="number">123456</span></span><br></pre></td></tr></tbody></table></figure><br><br>文章的头部加入以下代码就ok了<br><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">encrypt:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">enc_pwd:</span> <span class="number">123456</span></span><br></pre></td></tr></tbody></table></figure><br><br>## 图像懒加载<br><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-lazyload <span class="comment">--save</span></span><br></pre></td></tr></tbody></table></figure><br><br>Hexo 目录的配置文件_config.yml 中添加配置:<br><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">lazyload:</span><br><span class="line"></span><br><span class="line">  enable: true</span><br><span class="line"></span><br><span class="line"><span class="meta">  #</span><span class="bash"> className: <span class="comment">#可选</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">  #</span><span class="bash"> loadingImg: <span class="comment">#可选  /images/loading.png(这个是缓冲图像)</span></span></span><br></pre></td></tr></tbody></table></figure><br><br>## 指定页面作为主业<br>其实很简单,就是找到layout那边的index.swig备份下,然后把你想要的页面的swig替换成index就ok了<br><br><br><br><br><br><div class="image-size-100"></div></body></html>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;span class=&quot;description&quot;&gt;&lt;code&gt;[摘要]&lt;/code&gt;&lt;/span&gt;记录一些hexo小优化记录,并不全(可以说非常不全),之前自己忘记记录了,我也很烦…&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>XZ1国行转carbonRom分享</title>
    <link href="http://yoursite.com/XZ1%E5%9B%BD%E8%A1%8C%E8%BD%ACcarbonRom%E5%88%86%E4%BA%AB.html"/>
    <id>http://yoursite.com/XZ1国行转carbonRom分享.html</id>
    <published>2018-08-26T18:43:05.000Z</published>
    <updated>2018-09-09T14:14:11.254Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p></p><p class="description"><code>[摘要]</code></p><br><a id="more"></a><p></p><hr><div class="image-size-100"></div><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>近期主力机是8p，很均衡的手机，续航不错，屏幕不错，除了屏占比，和无法湿手解锁，其他我hin满意。好久没玩安卓了，几年前换ios是因为安卓虽然好玩但确实谈不上好用，生态问题没办法。最近想入手一个玩玩。其实还是有很多要求，比如：屏幕要求lcd亮度要够（屏幕就是一直常亮，oled就发高烧了），开放bl锁可以刷第三方rom，支持防水，外放要ok……但没有要求续航和拍照要多好，唉，我真是个hǐn麻烦滴人。本来打算xz2、s9+、魅族16（虽然他好像完全不符合我之前要求的，但是2698要啥自行车）。但最后入了xz1，很迷，考虑到之后要配主机并且好像还挺符合我的要求（都是借口），so我的机器是国行xz1（G8342 Dual），未解锁，下面开始洗刷刷。</p><p>国行如果要安装第三方rom则需要先安装港版固件（因为有谷歌框架，可以开放oem锁，只有打开了OEM锁才有更高权限去刷第三方rom），我们一步步道来。</p><div id="flowchart-0" class="flow-chart"></div><h2 id="1-刷入港版"><a href="#1-刷入港版" class="headerlink" title="1. 刷入港版"></a>1. 刷入港版</h2><p>我们需要在PC中进行操作，参考来自<a href="http://bbs.gfan.com/android-9189759-1-1.html" target="_blank" rel="noopener">机锋论坛：国行xz1输入港版固件教程</a>，感谢。这里仅做归纳整理。首先先下载好如下几个工具（windows）：</p><blockquote><ul><li>flashtool</li><li>港版rom（该已经修改完成，不用再去修改）</li><li>newflasher（这里不下也可以，应为已经在港版rom中整理好了，直接在包中运行即可）</li></ul></blockquote><div id="flowchart-1" class="flow-chart"></div><h3 id="1-1-安装好flashtool驱动"><a href="#1-1-安装好flashtool驱动" class="headerlink" title="1.1 安装好flashtool驱动"></a>1.1 安装好flashtool驱动</h3><p>下载完flashtool后，默认路径在c根目录中，打开找到drivers文件夹，安装里面的驱动</p><div class="image-size-100"><img src="/XZ1国行转carbonRom分享/1.png" title="flashtool"></div><p>打开后勾选安装蓝灯和绿灯模式，下一步安装会发现驱动安装签证错误，整理就需要关闭windows强制签名，操作流程如下：</p><blockquote><ol><li>打开设置</li><li>选择更新和安全</li><li>找到恢复选项</li><li>选择立即重启</li><li>重启后选择疑难解答</li><li>选择高级选项</li><li>选择启动设置</li><li>选择立即重启，重启后按F7</li><li>重新安装flashtool中的驱动</li><li>勾选蓝灯和绿灯，选择始终安装此程序</li></ol></blockquote><h3 id="1-2-刷入港版rom"><a href="#1-2-刷入港版rom" class="headerlink" title="1.2 刷入港版rom"></a>1.2 刷入港版rom</h3><p>解压下载好的港版rom文件</p><div class="image-size-100"><img src="/XZ1国行转carbonRom分享/2.png" title="港版rom"></div><p>手机要先进入绿灯模式连接电脑，即关机后长按音量-，再连接数据线到电脑（蓝灯是音量+）</p><p>打开文件夹，运行newflasher即可（因为该rom已经修改好了，所以可以直接运行）</p><p>根据论坛介绍：如果是原封的rom话，解压后需要对boot文件夹里面的文件后缀名.sinb改为sin和tab改为ta。还有解压后根目录的boot_delivery.xml放回boot里面，最重要的是在根目录下删除simlock.ta</p><div class="image-size-100"><img src="/XZ1国行转carbonRom分享/3.png" title="newflasher"></div><p>稍等几分钟就会提示刷机完成，刷完后直接开机，按照提示一步步设置。成功进入系统UI界面就算刷入成功。</p><p>废话：港版rom是自带google的，chrome是默认浏览器（好评），Chrome无敌，其实我觉得还不错。当时在犹豫要不要不要刷了，其实港版系统确实还不错，但还是刷了，我比较喜欢原生系统设计风格（感觉UI比较圆滑，色块比较顺眼，毕竟颜值第一：花母鸡：）。</p><h2 id="2-打开OEM锁"><a href="#2-打开OEM锁" class="headerlink" title="2. 打开OEM锁"></a>2. 打开OEM锁</h2><p>刷完港版rom后，下载shadowsocks，科学上网登陆google账号，成功登陆后打开开发者选项可以看到里面有个OEM开关，打开即可。</p><h2 id="3-解锁bl"><a href="#3-解锁bl" class="headerlink" title="3. 解锁bl"></a>3. 解锁bl</h2><p>解锁bl需要先去 <a href="https://developer.sony.com/develop/open-devices/get-started/unlock-bootloader/" target="_blank" rel="noopener">sony官网获取解锁码</a></p><p>按照官网的提示一步步进行</p><div class="image-size-100"><img src="/XZ1国行转carbonRom分享/4.png" title="获取解锁码"></div><p>输入IMEI码和邮箱可以获取解锁码（这里还是要进行全局科学上网才可以成功获得解锁码）。获得解锁码后，下载如下解锁工具：</p><blockquote><ul><li>sony解锁工具</li></ul></blockquote><p>下载完成后，手机关机后长按音量+，再连接电脑就会进入fastboot蓝灯模式。双击文件夹里面的</p><div class="image-size-100"><img src="/XZ1国行转carbonRom分享/5.png" title="运行解锁.bat"></div><p>输入之前获取到的解锁码就可以了，成功的话如下图所示：</p><div class="image-size-100"><img src="/XZ1国行转carbonRom分享/6.png" title="解锁成功示意图"></div><p>解锁后开机会发现有个手机已经unlock不安全的警告，会在5s后重启，这样就表示已经成功解锁了bl锁。</p><h2 id="4-刷入第三方carbonRom"><a href="#4-刷入第三方carbonRom" class="headerlink" title="4. 刷入第三方carbonRom"></a>4. 刷入第三方carbonRom</h2><p>我个人还是比较喜欢这个系统的，比较简单清爽。系统基于android 8.1，可以去 <a href="https://get.carbonrom.org/device-poplar.html" target="_blank" rel="noopener">carbonRom-xz1</a>下载最新的版本固件。如下是刷机准备：</p><blockquote><ul><li>下载carbonRom固件</li><li>ABD命令工具</li><li>刷入twrp.img（版本：twrp-3.2.1-0-poplar-8），用于刷机</li><li>magisk刷机包，用于root</li><li>MindTheGapps-8.1.0-arm64-20180808_153856，用于google服务（我还是比较喜欢谷歌服务的所以我会装）</li></ul></blockquote><p>谷歌服务来自 <a href="https://forum.xda-developers.com/xperia-xz1/development/8-1-x-carbonrom-cr-6-1-t3771542" target="_blank" rel="noopener">XDA论坛-carbonRom</a>，下载地址：<a href="https://androidfilehost.com/?fid=962187416754462508" target="_blank" rel="noopener">mindTheGapps-8.1.0</a></p><p>建议：刷机包这些可以直接使用我提供的，因为这样可以保证google框架可以刷入，刷入成功后手机可以通过carbonRom自带的ota进行升级。</p><p>下载完成后开始下面的操作：</p><ol><li>在手机新建文件夹rom，把carbonRom固件、magisk包，mindTheGapps包这三个拷贝到手机文件夹里。</li><li>打开abd命令的platform-tools文件夹，把我们下载好的twrp.img文件夹放入里面。</li><li>手机进入蓝灯模式连接到电脑，打开platform-tools文件夹，按住shift键+鼠标右键打开shell，直接运行run.bat，或者手动输入运行命令：</li></ol><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\<span class="selector-tag">fastboot</span> <span class="selector-tag">flash</span> <span class="selector-tag">recovery</span> <span class="selector-tag">twrp</span><span class="selector-class">.img</span></span><br></pre></td></tr></tbody></table></figure><p>   即可刷入twrp刷机工具，出现如下图：</p>   <div class="image-size-100"><img src="/XZ1国行转carbonRom分享/7.png" title="刷入twrp成功示意图"></div><p>   即表示刷入成功。手机关机后按住音量-和电源键不放就可以进入刷机模式（这个时间有点长，因为前期的unlock的警告都占用了一些时间）。</p><ol><li><p>重要：进入刷机模式第一件事就是要备份efs和<strong>boot</strong>和oem（手机基带等信息）</p><blockquote><p><strong>EFS</strong>是用来存取手机IMEI串号、无线网卡MAC地址以及网络设置的重要信息组件，目前发现升级不明基带的ROM以及频繁刷机或者错误的双清方法会导致EFS信息丢失，IMEI串号被清空或置零，基带未知，无法使用移动网络等故障。）</p></blockquote></li><li><p>进入刷机模式后，不要清空任何数据，就直接刷carbonRom+magisk（先不刷mindTheGapps）</p></li><li><p>进入系统后查看系统基带等是否都在，可不可以连接网络，可以的话就继续进入恢复模式去刷入mindTheGapps。如果不可以就直接进入恢复模式去恢复之前备份的efs和oem，顺便刷入mindTheGapps。</p></li></ol><blockquote><p>重要！！！！！！！！！！！！！！！！！</p><p>打开可能会发现连接不了网络，我试了好几遍重刷，都没用：惊讶：</p><p>后来直接在上面第六步后直接恢复出厂设置全部置空，重新进入系统会发现google框架设置界面（nice），可以连接网络了，intesting：angry：</p></blockquote><hr><h2 id="5-xposed框架"><a href="#5-xposed框架" class="headerlink" title="5. xposed框架"></a>5. xposed框架</h2><p><a href="https://forum.xda-developers.com/showthread.php?t=3034811" target="_blank" rel="noopener">xposed地址</a></p><p><a href="https://dl-xda.xposed.info/framework/" target="_blank" rel="noopener">xposed-install/uninstall 地址</a></p><p>可以下载我的：</p><blockquote><ul><li>xposed-v90-sdk27-arm64-beta1</li></ul></blockquote><p>但我建议没有特殊需求就不用刷xposed，软件很容易会出现停止运行的现象，很烦人。</p><h2 id="结语："><a href="#结语：" class="headerlink" title="结语："></a>结语：</h2><p>优化下手机还是很漂亮的，比较喜欢鬼刀大佬的图，设为了壁纸，喜欢的话直接搜鬼刀的自己找就可以了。安装了手势软件x home bar，比较三大金刚还是很感人，本来才5.2inch，我觉得还是很有必要的。刷完后运行流畅，很快，还是很喜欢这个系统，也有root，挺好玩。吐槽下，xz1的相机是真的渣，很迷，不过我也不会拿它去拍照也无所谓了。还有一点是，我不知道为什么炉石打不开了，直接黑屏，港版和国行rom上面是ok的，em……..无所谓了。</p><div style="display:inline-block"><img src="/XZ1国行转carbonRom分享/8.JPG" title="extend:?imageView2/2/w/200"><img src="/XZ1国行转carbonRom分享/9.jpg" title="extend:?imageView2/2/w/200"></div><p>本篇完结，希望大家喜欢，撒花</p><p><script src="https://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.7/raphael.min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/flowchart/1.6.5/flowchart.min.js"></script><textarea id="flowchart-0-code" style="display: none">hk=>start: 1. 刷入港版oem=>operation: 2. 打开oem锁bl=>operation: 3. 解bl锁carbon=>operation: 4. 刷入第三方carbonRome=>endhk->oem->bl->carbon->e</textarea><textarea id="flowchart-0-options" style="display: none">{"theme":"simple","scale":1,"line-width":2,"line-length":10,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script><textarea id="flowchart-1-code" style="display: none">1=>operation: 1.1 安装好flashtool驱动2=>operation: 1.2 刷入港版系统1->2</textarea><textarea id="flowchart-1-options" style="display: none">{"theme":"simple","scale":1,"line-width":2,"line-length":10,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-1-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-1-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-1", options);</script></p></body></html>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p class=&quot;description&quot;&gt;&lt;code&gt;[摘要]&lt;/code&gt;&lt;/p&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>个人收藏</title>
    <link href="http://yoursite.com/%E4%B8%AA%E4%BA%BA%E6%94%B6%E8%97%8F.html"/>
    <id>http://yoursite.com/个人收藏.html</id>
    <published>2018-08-26T14:55:04.000Z</published>
    <updated>2018-09-08T14:30:48.976Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p><span class="description"><code>[摘要]</code></span>这主要是一些简单的个人收藏,没什么阅读价值🌚</p><a id="more"></a><hr><h2 id="喜欢的表情包"><a href="#喜欢的表情包" class="headerlink" title="喜欢的表情包"></a>喜欢的表情包</h2><div align="center"><br><img id="github-emoji" src="https://achunorigin.github.io/emoji/lgwx.jpg" height="120" width="120" alt="lgwx.jpg"><img id="github-emoji" src="https://achunorigin.github.io/emoji/cf.gif" height="120" width="120" alt="cf.gif" style="display:inline"><img id="github-emoji" src="https://achunorigin.github.io/emoji/cg.jpg" height="120" width="120" alt="" style="display:inline"><img id="github-emoji" src="https://achunorigin.github.io/emoji/cj.gif" height="120" width="120" alt="" style="display:inline"><img id="github-emoji" src="https://achunorigin.github.io/emoji/dn.gif" height="120" width="120" alt="" style="display:inline"><img id="github-emoji" src="https://achunorigin.github.io/emoji/dql.jpg" height="120" width="120" alt="" style="display:inline"><img id="github-emoji" src="https://achunorigin.github.io/emoji/bang.jpg" height="120" width="120" alt="" style="display:inline"><img id="github-emoji" src="https://achunorigin.github.io/emoji/good.jpg" height="120" width="120" alt="" style="display:inline"><img id="github-emoji" src="https://achunorigin.github.io/emoji/gz.gif" height="120" width="120" alt="" style="display:inline"><img id="github-emoji" src="https://achunorigin.github.io/emoji/hc.jpg" height="120" width="120" alt="" style="display:inline"><img id="github-emoji" src="https://achunorigin.github.io/emoji/hello.gif" height="120" width="120" alt="" style="display:inline"><img id="github-emoji" src="https://achunorigin.github.io/emoji/hh.gif" height="120" width="120" alt="" style="display:inline"><img id="github-emoji" src="https://achunorigin.github.io/emoji/hn.gif" height="120" width="120" alt="" style="display:inline"><img id="github-emoji" src="https://achunorigin.github.io/emoji/hp.gif" height="120" width="120" alt="" style="display:inline"><img id="github-emoji" src="https://achunorigin.github.io/emoji/hq.jpg" height="120" width="120" alt="" style="display:inline"><img id="github-emoji" src="https://achunorigin.github.io/emoji/hx.jpg" height="120" width="120" alt="" style="display:inline"><img id="github-emoji" src="https://achunorigin.github.io/emoji/hxyx.jpg" height="120" width="120" alt="" style="display:inline"><img id="github-emoji" src="https://achunorigin.github.io/emoji/jlyk.jpg" height="120" width="120" alt="" style="display:inline"><img id="github-emoji" src="https://achunorigin.github.io/emoji/jw.jpg" height="120" width="120" alt="" style="display:inline"><img id="github-emoji" src="https://achunorigin.github.io/emoji/jy.jpg" height="120" width="120" alt="" style="display:inline"><img id="github-emoji" src="https://achunorigin.github.io/emoji/kx.jpg" height="120" width="120" alt="" style="display:inline"><img id="github-emoji" src="https://achunorigin.github.io/emoji/la.jpg" height="120" width="120" alt="" style="display:inline"><img id="github-emoji" src="https://achunorigin.github.io/emoji/lbx.jpg" height="120" width="120" alt="" style="display:inline"><img id="github-emoji" src="https://achunorigin.github.io/emoji/mmd.gif" height="120" width="120" alt="" style="display:inline"><img id="github-emoji" src="https://achunorigin.github.io/emoji/ndd.jpg" height="120" width="120" alt="" style="display:inline"><img id="github-emoji" src="https://achunorigin.github.io/emoji/qiong.jpg" height="120" width="120" alt="" style="display:inline"><img id="github-emoji" src="https://achunorigin.github.io/emoji/sd.gif" height="120" width="120" alt="" style="display:inline"><img id="github-emoji" src="https://achunorigin.github.io/emoji/sh.jpg" height="120" width="120" alt="" style="display:inline"><img id="github-emoji" src="https://achunorigin.github.io/emoji/tx.jpg" height="120" width="120" alt="" style="display:inline"><img id="github-emoji" src="https://achunorigin.github.io/emoji/wh.jpg" height="120" width="120" alt="" style="display:inline"><img id="github-emoji" src="https://achunorigin.github.io/emoji/wl.jpg" height="120" width="120" alt="" style="display:inline"><img id="github-emoji" src="https://achunorigin.github.io/emoji/wxh.jpg" height="120" width="120" alt="" style="display:inline"><img id="github-emoji" src="https://achunorigin.github.io/emoji/xd.gif" height="120" width="120" alt="" style="display:inline"><img id="github-emoji" src="https://achunorigin.github.io/emoji/xj.gif" height="120" width="120" alt="" style="display:inline"><img id="github-emoji" src="https://achunorigin.github.io/emoji/xn.jpg" height="120" width="120" alt="" style="display:inline"><img id="github-emoji" src="https://achunorigin.github.io/emoji/xs.jpg" height="120" width="120" alt="" style="display:inline"><img id="github-emoji" src="https://achunorigin.github.io/emoji/yoo.jpg" height="120" width="120" alt="" style="display:inline"><img id="github-emoji" src="https://achunorigin.github.io/emoji/zh.jpg" height="120" width="120" alt="" style="display:inline"><img id="github-emoji" src="https://achunorigin.github.io/emoji/zx.jpg" height="120" width="120" alt="" style="display:inline"><img id="github-emoji" src="https://achunorigin.github.io/emoji/zy.gif" height="120" width="120" alt="" style="display:inline"><br></div><img title="吃瓜" alt="吃瓜" [extend="?imageView2/2/w/120" src="http://pe314yl7h.bkt.clouddn.com/static/images//emoji/cg.jpg"><img title="骂人" alt="骂人" [extend="?imageView2/2/w/120" src="http://pe314yl7h.bkt.clouddn.com/static/images//emoji/zh.jpg"><h2 id="设计不错的网站"><a href="#设计不错的网站" class="headerlink" title="设计不错的网站"></a>设计不错的网站</h2><p><del>其实我觉得<code>Markdown Preview Enhanced</code> <a href="https://shd101wyy.github.io/markdown-preview-enhanced/#/zh-cn/" target="_blank" rel="noopener">link</a> 这个网站的文档说明很好看，很有设计感 ，还不错。</del><br>今天才发现这个设计文档是来自<a href="https://docsify.js.org/#/" target="_blank" rel="noopener">docsify</a>的模板,<br>这个设计看起来真的很舒服 👀</p><div class="image-size-100"><img src="/个人收藏/Markdown-preview-enhanced.png" title="Markdown-preview-enhanced"></div><img title="DragonBall_Buerma" alt="DragonBall_Buerma" src="http://pe314yl7h.bkt.clouddn.com/static/images/DragonBall_Buerma.png?imageView2/2/w/450"></body></html>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;span class=&quot;description&quot;&gt;&lt;code&gt;[摘要]&lt;/code&gt;&lt;/span&gt;这主要是一些简单的个人收藏,没什么阅读价值🌚&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>完整的深度学习项目实操过程</title>
    <link href="http://yoursite.com/%E5%AE%8C%E6%95%B4%E7%9A%84%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%93%8D%E8%BF%87%E7%A8%8B.html"/>
    <id>http://yoursite.com/完整的深度学习项目实操过程.html</id>
    <published>2018-08-20T09:54:27.000Z</published>
    <updated>2018-09-08T14:30:54.304Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p class="description"><code>[摘要]</code>🤔… </p><a id="more"></a><hr><div align="center"><img id="github-emoji" src="https://achunorigin.github.io/emoji/hello.gif" height="120" width="120" alt="emoji" style="display:inline"></div><div align="center" style="font-size:14px;color:#FF9900;font-weight:bold;">hello大家好,又见面啦,今天给大家介绍的是新作品,欢迎大家阅读哦  <img id="github-emoji" style="display:inline" alt="hx" src="https://achunorigin.github.io/emoji/hx.jpg" height="30" width="30"></div><hr><div align="center"><img id="github-emoji" src="https://achunorigin.github.io/emoji/hn.gif" height="120" width="120" alt="emoji" style="display:inline"></div></body></html>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;&lt;code&gt;[摘要]&lt;/code&gt;🤔… &lt;/p&gt;
    
    </summary>
    
      <category term="深度学习" scheme="http://yoursite.com/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="caffe" scheme="http://yoursite.com/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/caffe/"/>
    
      <category term="实操" scheme="http://yoursite.com/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/caffe/%E5%AE%9E%E6%93%8D/"/>
    
    
      <category term="caffe" scheme="http://yoursite.com/tags/caffe/"/>
    
      <category term="深度学习" scheme="http://yoursite.com/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="matalb" scheme="http://yoursite.com/tags/matalb/"/>
    
      <category term="实操" scheme="http://yoursite.com/tags/%E5%AE%9E%E6%93%8D/"/>
    
  </entry>
  
  <entry>
    <title>vps搭建ss</title>
    <link href="http://yoursite.com/vps%E6%90%AD%E5%BB%BAss.html"/>
    <id>http://yoursite.com/vps搭建ss.html</id>
    <published>2018-08-16T05:37:31.000Z</published>
    <updated>2018-08-16T05:37:31.000Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p><span class="description"><code>[摘要]</code></span>本文主要介绍了搭建vps服务器的过程，可实现ss科学上网，供大家参考。</p><a id="more"></a><hr><p>对于ss大家可能并不陌生，毕竟科学上网还是要的。现如今VPN该凉的都凉了，所以需要搭建稳一点的服务器来进行科学上网还是要靠谱些。</p><h4 id="1-关于服务器的选择"><a href="#1-关于服务器的选择" class="headerlink" title="1. 关于服务器的选择"></a>1. 关于服务器的选择</h4><p>比较出名的服务器有<code>Vultr</code>和近几年比较便宜的<code>搬瓦工</code></p><p><a href="https://www.vultr.com/?gclid=CjwKCAjwns_bBRBCEiwA7AVGHuchX7Yf2jK3WFjL7Qowc5QSIHQnFk-BS3qpeJ4NsEeXsJjrpi5XpBoC8EAQAvD_BwE" target="_blank" rel="noopener">vultr地址</a>：套餐推荐<code>5$/m</code></p><p><a href="https://www.bandwagonghost.cn/index.html?gclid=CjwKCAjwns_bBRBCEiwA7AVGHjnRveXmzNexN4sXYXbEL-8TOnCjcnknFtvc7Uht3ZtYOvDNk9hK6BoCZ2sQAvD_BwE" target="_blank" rel="noopener">搬瓦工地址</a>：<a href="https://www.bandwagonhost.net/coupon" target="_blank" rel="noopener">优惠码地址，最高6.25%</a></p><ul><li>性价比套餐推荐年<code>19.99$/y</code>选<code>KVM</code>就好，有优惠码最高有6.25%优惠，还是很不错的。</li><li>资金ok下性价比高的是<code>10G KVM 特价促销款 V3 - 洛杉矶 - CN2</code>这个有对中国区域进行加速，年价格是<code>29.99$/y</code>，延迟也会低一些，同样可以使用优惠码优惠6.25%。 </li></ul><p><code>注意:</code></p><blockquote><p>Vultr服务器在去年推出了<code>2.5<sub>/m</code>这样一个套餐,看起来很便宜但实际上要求<code>ipv6 only</code>，也就是说你所在的当前运营商需要支持<code>ipv6</code>才可以连接到服务器，这个其实在国内还是不要选择的好，并不是所有运营地区支持<code>ipv6</code>。因此推荐<code>5</sub>/m</code>的套餐。</p></blockquote><p>本教程选择的是搬瓦工，19.99刀一年，KVM，优惠6.25%，其实优惠码可以在网页代码里就找到，是暗藏的（该死的人类，不打折就不舒服he）</p><h4 id="2-搭建"><a href="#2-搭建" class="headerlink" title="2.搭建"></a>2.搭建</h4><p>选完自己的套餐后就<code>checkout</code>结账，还没注册也没关系，结账界面可以注册。支付方式可以选择<code>Alipay支付宝</code></p><h5 id="2-1-进入控制面板"><a href="#2-1-进入控制面板" class="headerlink" title="2.1.进入控制面板"></a>2.1.进入控制面板</h5><p><img src="https://ws4.sinaimg.cn/large/0069RVTdgy1fubkjn8w0qj31kw1b17lv.jpg" alt="1"></p><p>进入后进入控制面板<code>KiwiVM Control Panel</code></p><p><code>注意 :</code> </p><blockquote><p> KiwiVM Control Panel 的初始密码是第一次发送给你邮箱的密码</p></blockquote><p>第一步需要进行重装系统，选择途中的系统进行安装</p><p><img src="https://ws4.sinaimg.cn/large/0069RVTdgy1fubkoormi8j31fg10g463.jpg" alt="2"></p><h5 id="2-2-安装ssr脚本"><a href="#2-2-安装ssr脚本" class="headerlink" title="2.2 安装ssr脚本"></a>2.2 安装ssr脚本</h5><p>我们通过ssh命令进入系统来进行ss环境搭建,这里我使用的系统环境是macOS.可以直接在iterm中进行ssh连接服务器,linux也可以.对于windows用户的同学直接使用putty来进入也是一样的.</p><p><code>ssh命令</code></p><blockquote><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">> ssh -p <sub><span class="string">"你的端口"</span> root@</sub><span class="string">"你的地址"</span></span><br><span class="line">> <span class="comment"># <sub>" "代表该位置全替换成自己的,包括</sub>""</span></span><br><span class="line">></span><br></pre></td></tr></tbody></table></figure></blockquote><p><code>ps:</code></p><blockquote><p>在iterm中可以添加快捷输入alias,因为我使用是zsh主题因此在~/.zshrc中,添加完成后要.如果是默认的就在/.bash_profile中,这里不做详细展开.</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">></span><span class="bash">  <span class="built_in">source</span> ~/.zshhrc</span></span><br><span class="line"><span class="meta">></span><span class="bash"></span></span><br></pre></td></tr></tbody></table></figure></blockquote><blockquote><p>例如添加:</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">></span><span class="bash"> <span class="built_in">alias</span> sb=<span class="string">"ssh -p <sub>"</span>你的端口<span class="string">" root@</sub>"</span>你的地址<span class="string">""</span></span></span><br><span class="line"><span class="meta">></span><span class="bash"></span></span><br></pre></td></tr></tbody></table></figure></blockquote><blockquote><p> 代表以后可以直接输入sb来运行自己的服务器</p></blockquote><p>我们进入服务器后出现<code>root@host ~]#</code>,因为原来的密码冗长,输入<code>passwd</code>来进行修改为自己的密码,之后开始正式操作.</p><p><code>键入</code></p><blockquote><figure class="highlight vim"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">> wget --<span class="keyword">no</span>-check-certificate -O shadowsocks-<span class="keyword">all</span>.<span class="keyword">sh</span> http<span class="variable">s:</span>//raw.githubusercontent.<span class="keyword">com</span>/teddysun/shadowsocks_install/master/shadowsocks-<span class="keyword">all</span>.<span class="keyword">sh</span></span><br><span class="line">></span><br></pre></td></tr></tbody></table></figure></blockquote><blockquote><p><strong>如出现错误提示 bash: wget: command not found，可以先执行 yum -y install wget 命令。</strong></p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">></span><span class="bash"> chmod +x shadowsocks-all.sh</span></span><br><span class="line"><span class="meta">></span><span class="bash"> ./shadowsocks-all.sh 2>&1 | tee shadowsocks-all.log</span></span><br><span class="line"><span class="meta">></span><span class="bash"></span></span><br></pre></td></tr></tbody></table></figure></blockquote><blockquote><ul><li>选择1.shadowsocks-python,之后会提示输入密码,这里就输入你想要设置的密码就好(尽量设置简单点,因为保不了之后可能会分享给自己的朋友对吧)</li><li>下一步会提示你输入端口,这里自行选择喜好数字进行输入</li><li>最后一步加密方式选择<code>aes-256-cfb</code>比较通用</li></ul><p>安装过程需要点时间.<code>注意</code>最后的脚本完成提示要自己保存好(不然拿什么输入呢😳)</p></blockquote><h5 id="2-3-安装bbr魔改版"><a href="#2-3-安装bbr魔改版" class="headerlink" title="2.3. 安装bbr魔改版"></a>2.3. 安装bbr魔改版</h5><p>原始的默认bbr会出现丢包情况,速度不是很理想.这里我们安装魔改过后的bbr内核就会好很多.</p><p><code>安装过程参考博客:</code><a href="https://www.moerats.com/archives/387/" target="_blank" rel="noopener">BBR+BBR魔改+Lotsever(锐速)一键脚本 for Centos/Debian/Ubuntu</a></p><p><code>安装内核</code></p><blockquote><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">></span><span class="bash"> wget -N --no-check-certificate <span class="string">"https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh"</span> && chmod +x tcp.sh && ./tcp.sh</span></span><br><span class="line"><span class="meta">></span><span class="bash"></span></span><br></pre></td></tr></tbody></table></figure></blockquote><blockquote><p><img src="https://ws1.sinaimg.cn/large/0069RVTdgy1fubm6x6jr3j30a309zjrb.jpg" alt="3"></p><ul><li>选择1安装魔改版内核</li><li>安装完成后重启服务器,在使用<code>./tcp.sh</code>命令接着操作</li><li>重新进入选择4或者5来进行加速,之后也可以再运行8来进配置优化</li></ul><p>这样内核算是安装完成,<code>注意:</code>安装过程中删除内核出现</p><p><img src="https://ws1.sinaimg.cn/large/0069RVTdgy1fubmaizo8aj30sk0d73z4.jpg" alt="4"></p><p>需要选择<code>NO</code></p></blockquote><h5 id="2-4-配置ipv6"><a href="#2-4-配置ipv6" class="headerlink" title="2.4. 配置ipv6"></a>2.4. 配置ipv6</h5><p>默认KVM是没有开启ipv6的,实际上可以开启,不过需要我们自己配置</p><p><code>参考文章</code> <a href="https://www.bandwagonhost.net/2144.html" target="_blank" rel="noopener"></a><a href="https://www.bandwagonhost.net/2144.html" target="_blank" rel="noopener">给搬瓦工 KVM 版 VPS 配置 IPv6 支持（基于 Linux CentOS 7）</a></p><p>文章写得很详细,这里仅仅做简要归纳.</p><ol><li><p>首先先 <a href="https://www.tunnelbroker.net" target="_blank" rel="noopener">注册</a></p></li><li><p>点击左侧的<code>Create Regular Tunnel</code></p></li><li><p>输入 VPS 的<code>IP 地址</code>和选择自己的<code>服务器地区</code></p></li><li><p>切换到<code>Example Configurations</code>,选择<code>Linux-net-tools</code></p></li><li><p>打开ssh,键入上一步骤内的代码</p></li><li><p>完成上述命令后，可以运行 ping6 google.com，测试是否能 ping 通，可以的话就ok🌶</p></li><li><p>下一步要设置开机启动</p><figure class="highlight vim"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -<span class="keyword">y</span> install <span class="keyword">vim</span></span><br><span class="line"><span class="keyword">vim</span> /root/ipv6.<span class="keyword">sh</span></span><br></pre></td></tr></tbody></table></figure><p>在里面输入第四步骤代码内的内容再保存</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 增加可执行权限</span></span><br><span class="line">chmod +x /root/ipv6.sh</span><br><span class="line">vim /etc/rc.d/rc.local</span><br></pre></td></tr></tbody></table></figure><p>在最下方加入<code>sh /root/ipv6.sh</code>再保存，这样重启过后也有ipv6了</p></li></ol><h4 id="3-下载对应客户端"><a href="#3-下载对应客户端" class="headerlink" title="3. 下载对应客户端"></a>3. 下载对应客户端</h4><ul><li>ios可以考虑去商店下载<code>wingy</code>，如果商店下载不了就去手机助手商店里下载也是可以的。</li><li>其他的操作系统可以考虑直接到 <a href="https://us.ishadowx.net/" target="_blank" rel="noopener">ishadow</a> 去下载最新版本。</li></ul></body></html>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;span class=&quot;description&quot;&gt;&lt;code&gt;[摘要]&lt;/code&gt;&lt;/span&gt;本文主要介绍了搭建vps服务器的过程，可实现ss科学上网，供大家参考。&lt;/p&gt;
    
    </summary>
    
      <category term="vps" scheme="http://yoursite.com/categories/vps/"/>
    
      <category term="ss" scheme="http://yoursite.com/categories/vps/ss/"/>
    
    
      <category term="vps" scheme="http://yoursite.com/tags/vps/"/>
    
      <category term="ss" scheme="http://yoursite.com/tags/ss/"/>
    
      <category term="搬瓦工" scheme="http://yoursite.com/tags/%E6%90%AC%E7%93%A6%E5%B7%A5/"/>
    
  </entry>
  
  <entry>
    <title>macOS High Sirra 10.13.6 caffe环境搭建</title>
    <link href="http://yoursite.com/macOS-High-Sirra-10-13-6-caffe%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html"/>
    <id>http://yoursite.com/macOS-High-Sirra-10-13-6-caffe环境搭建.html</id>
    <published>2018-08-10T19:19:49.000Z</published>
    <updated>2018-08-11T18:38:49.000Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p><span class="description"><code>[摘要]</code></span>这是一篇在mac中搭建caffe环境的教程，介绍了搭建过程中可能遇到的问题，并提供一定的解决方案供参考。<br><a id="more"></a></p><hr><h4 id="0-介绍-环境"><a href="#0-介绍-环境" class="headerlink" title="0.介绍+环境"></a>0.介绍+环境</h4><p>我是在anaconda2上搭建py27环境，该安装的环境安装好，需要注意的是如果python改为anaconda路径需要对caffe立面的需要到python的路径设定为anaconda路径。caffe对anaconda的支持还是很友好的。</p><p><code>注</code>:安装过程中可能遇到的问题在问题汇总看下有没有遇到类似的问题</p><blockquote><p>在每次进入终端都需要通过命令激活anaconda的python路径</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">></span><span class="bash">   <span class="built_in">source</span> activate py27</span></span><br><span class="line"><span class="meta">></span><span class="bash"></span></span><br></pre></td></tr></tbody></table></figure></blockquote><p><code>0.1. 安装Anaconda</code></p><p><em><a href="https://www.continuum.io/downloads" target="_blank" rel="noopener">https://www.continuum.io/downloads</a></em> 选择需要的版本。</p><blockquote><p>export PATH=”/anaconda2/bin:$PATH”</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">></span><span class="bash">   复制anaconda2到/usr/<span class="built_in">local</span>/Cellar</span></span><br><span class="line"><span class="meta">></span><span class="bash"></span></span><br></pre></td></tr></tbody></table></figure></blockquote><blockquote><figure class="highlight elixir"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">>   export DYLD_FALLBACK_LIBRARY_PATH=<span class="regexp">/usr/local</span><span class="regexp">/Cellar/anaconda</span>2<span class="symbol">:/usr/local/lib</span><span class="symbol">:/usr/lib</span></span><br><span class="line">></span><br></pre></td></tr></tbody></table></figure></blockquote><p><code>0.2. 安装homebrew</code></p><blockquote><ul><li>terminal键入</li></ul><blockquote><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">></span><span class="bash"> >   /usr/bin/ruby -e <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>"</span></span></span><br><span class="line"><span class="meta">></span><span class="bash"> ></span></span><br></pre></td></tr></tbody></table></figure></blockquote></blockquote><blockquote><ul><li>遇到<code>Warning:</code> <del>/usr/local/bin is not in your PATH.</del></li></ul><blockquote><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">></span><span class="bash"> >   <span class="built_in">export</span> PATH=/usr/<span class="built_in">local</span>/bin:<span class="variable">$PATH</span></span></span><br><span class="line"><span class="meta">></span><span class="bash"> ></span></span><br></pre></td></tr></tbody></table></figure></blockquote></blockquote><blockquote><ul><li>安装后再次打开终端如果出现<code></code>-bash brew is not exist`</li></ul><blockquote><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">></span><span class="bash"> >   sudo vim .bash_profile</span></span><br><span class="line"><span class="meta">></span><span class="bash"> ></span></span><br></pre></td></tr></tbody></table></figure></blockquote></blockquote><blockquote><blockquote><p>添加export PATH=/usr/local/bin:$PATH 然后</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">></span><span class="bash"> >   <span class="built_in">source</span> .bash_profile</span></span><br><span class="line"><span class="meta">></span><span class="bash"> ></span></span><br></pre></td></tr></tbody></table></figure></blockquote></blockquote><blockquote><ul><li>安装基本依赖</li></ul><blockquote><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">></span><span class="bash"> >   brew install -vd snappy leveldb gflags glog szip lmdb</span></span><br><span class="line"><span class="meta">></span><span class="bash"> >   brew tap homebrew/science</span></span><br><span class="line"><span class="meta">></span><span class="bash"> >   brew install hdf5 opencv</span></span><br><span class="line"><span class="meta">></span><span class="bash"> ></span></span><br></pre></td></tr></tbody></table></figure></blockquote></blockquote><blockquote><blockquote><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">></span><span class="bash"> >   <span class="keyword">for</span> x <span class="keyword">in</span> snappy leveldb gflags glog szip hdf5 lmdb homebrew/science/opencv;</span></span><br><span class="line"><span class="meta">></span><span class="bash"> >   <span class="keyword">do</span></span></span><br><span class="line"><span class="meta">></span><span class="bash"> >       brew uninstall <span class="variable">$x</span>;</span></span><br><span class="line"><span class="meta">></span><span class="bash"> >       brew install --fresh -vd <span class="variable">$x</span>;</span></span><br><span class="line"><span class="meta">></span><span class="bash"> >   <span class="keyword">done</span></span></span><br><span class="line"><span class="meta">></span><span class="bash"> ></span></span><br></pre></td></tr></tbody></table></figure></blockquote></blockquote><blockquote><blockquote><figure class="highlight mipsasm"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">> >   <span class="keyword">brew </span>uninstall <span class="keyword">boost </span><span class="keyword">boost-python; </span><span class="keyword">brew </span><span class="keyword">install </span>--fresh -vd <span class="keyword">boost </span><span class="keyword">boost-python</span></span><br><span class="line"><span class="keyword">> </span>>   <span class="keyword">brew </span>link --force <span class="keyword">boost</span></span><br><span class="line"><span class="keyword">> </span>>   <span class="keyword">brew </span>link --force <span class="keyword">boost-python</span></span><br><span class="line"><span class="keyword">> </span>></span><br></pre></td></tr></tbody></table></figure></blockquote></blockquote><blockquote><blockquote><ul><li><p><code>注意这里不用安装protobuf</code>因为protobuf是在conda中安装的</p><figure class="highlight crystal"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">> >     conda uninstall <span class="class"><span class="keyword">lib</span></span></span><br><span class="line">> >     conda uninstall protobuf</span><br><span class="line">> >     conda install -c anaconda protobuf</span><br><span class="line">> ></span><br></pre></td></tr></tbody></table></figure></li></ul></blockquote></blockquote><p><code>0.3. 安装cmake</code></p><blockquote><p>去官网下载安装即可，DMG格式直接双击安装<a href="https://link.jianshu.com/?t=https://cmake.org/download/" target="_blank" rel="noopener">https://cmake.org/download/</a></p><p><code>设置永久路径</code></p><blockquote><p>sudo “/Applications/CMake.app/Contents/bin/cmake-gui” –install</p></blockquote></blockquote><h4 id="1-caffe-clone"><a href="#1-caffe-clone" class="headerlink" title="1.caffe clone"></a>1.caffe clone</h4><blockquote><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">></span><span class="bash">   git <span class="built_in">clone</span> https://github.com/BVLC/caffe.git</span></span><br><span class="line"><span class="meta">></span><span class="bash">   <span class="built_in">cd</span> caffe</span></span><br><span class="line"><span class="meta">></span><span class="bash">   cp Makefile.config.example Makefile.config</span></span><br><span class="line"><span class="meta">></span><span class="bash"></span></span><br></pre></td></tr></tbody></table></figure></blockquote><blockquote><p>可以一气呵成</p></blockquote><p>我在mac上没有用到cuda，用的是cpu。确实非常非常慢，反正我是受不了的啦，还是买台台式跑的好。</p><p>好，继续。</p><blockquote><p>修改makefile.config也就是刚刚拷出来的，改他</p><p><code>关键点</code></p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">></span><span class="bash">   CPU_ONLY := 1</span></span><br><span class="line"><span class="meta">></span><span class="bash">   BLAS := open <span class="comment">#当然需要brew安装下openblas</span></span></span><br><span class="line"><span class="meta">></span><span class="bash">   </span></span><br><span class="line"><span class="meta">></span><span class="bash">   <span class="comment">#这里对照下是不是自己的路径</span></span></span><br><span class="line"><span class="meta">></span><span class="bash">   BLAS_INCLUDE := /usr/<span class="built_in">local</span>/Cellar/openblas/0.3.1/include</span></span><br><span class="line"><span class="meta">></span><span class="bash">   BLAS_LIB := /usr/<span class="built_in">local</span>/Cellar/openblas/0.3.1/lib</span></span><br><span class="line"><span class="meta">></span><span class="bash">   </span></span><br><span class="line"><span class="meta">></span><span class="bash">   <span class="comment">#然后把下面的python注释掉,毕竟我们用的是anaconda的</span></span></span><br><span class="line"><span class="meta">></span><span class="bash">   <span class="comment">#PYTHON_INCLUDE := /usr/include/python2.7 \</span></span></span><br><span class="line"><span class="meta">></span><span class="bash">           <span class="comment">#/usr/lib/python2.7/dist-packages/numpy/core/include</span></span></span><br><span class="line"><span class="meta">></span><span class="bash">   </span></span><br><span class="line"><span class="meta">></span><span class="bash">   <span class="comment">#anaconda的路径需要修改成自己的,自己看下自己的路径在哪里对照着修改就好</span></span></span><br><span class="line"><span class="meta">></span><span class="bash">   ANACONDA_HOME := /anaconda2</span></span><br><span class="line"><span class="meta">></span><span class="bash">   PYTHON_INCLUDE := $(ANACONDA_HOME)/include \</span></span><br><span class="line"><span class="meta">></span><span class="bash">           $(ANACONDA_HOME)/include/python2.7 \</span></span><br><span class="line"><span class="meta">></span><span class="bash">           $(ANACONDA_HOME)/lib/python2.7/site-packages/numpy/core/include</span></span><br><span class="line"><span class="meta">></span><span class="bash">   PYTHON_LIB := $(ANACONDA_HOME)/lib</span></span><br><span class="line"><span class="meta">></span><span class="bash">   </span></span><br><span class="line"><span class="meta">></span><span class="bash">   <span class="comment">#看下路径是不是自己的</span></span></span><br><span class="line"><span class="meta">></span><span class="bash">   INCLUDE_DIRS := $(PYTHON_INCLUDE) /usr/<span class="built_in">local</span>/include</span></span><br><span class="line"><span class="meta">></span><span class="bash">   LIBRARY_DIRS := $(PYTHON_LIB) /usr/<span class="built_in">local</span>/lib /usr/lib /usr/<span class="built_in">local</span>/Cellar/boost-python/1.67.0/lib</span></span><br><span class="line"><span class="meta">></span><span class="bash"></span></span><br></pre></td></tr></tbody></table></figure></blockquote><h4 id="2-安装过程"><a href="#2-安装过程" class="headerlink" title="2. 安装过程"></a>2. 安装过程</h4><blockquote><p>需要先cd打开自己的caffe目录，修改caffe/python里面的requirements.txt</p><p>打开,然后修改python-dateutil>=1.4,<2，改python-dateutil>=1.4就好,不然会重装python-dateutil版本变成1.5导致其他安装错误</p><p>进入里面的python路径并执行如下命令</p><figure class="highlight perl"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">>   <span class="keyword">for</span> req in <<span class="function"><span class="keyword">sub</span>></span>(cat requirements.txt); <span class="keyword">do</span> pip install <<span class="regexp">/sub>req; done</span></span><br><span class="line"><span class="regexp">></span></span><br></pre></td></tr></tbody></table></figure></blockquote><blockquote><p>看下报错里面自己缺了什么,缺了就需要补缺</p><p>如果遇到protobuf问题看下问题汇总出有没有出现类似情况供参考</p><p>在caffe根目录下新建build文件夹(因为直接在根目录里进行make的话很容易就挂了)</p><p>打开cafffe根目录下的makefile</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">></span><span class="bash">     把:PYTHON_LIBRARIES ?= boost_python python2.7</span></span><br><span class="line"><span class="meta">></span><span class="bash">     改为:PYTHON_LIBRARIES ?= boost_python27 python2.7</span></span><br><span class="line"><span class="meta">></span><span class="bash">     再</span></span><br><span class="line"><span class="meta">></span><span class="bash">     <span class="built_in">export</span> PYTHONPATH=/Users/achunorigin/caffe/build/lib:<span class="variable">$PYTHONPATH</span></span></span><br><span class="line"><span class="meta">></span><span class="bash"></span></span><br></pre></td></tr></tbody></table></figure></blockquote><blockquote><p>现在根目录下进行一次make pycaffe</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">></span><span class="bash">   rm -r build</span></span><br><span class="line"><span class="meta">></span><span class="bash">   mkdir build</span></span><br><span class="line"><span class="meta">></span><span class="bash">   <span class="built_in">cd</span> build</span></span><br><span class="line"><span class="meta">></span><span class="bash">   cmake ..</span></span><br><span class="line"><span class="meta">></span><span class="bash"></span></span><br></pre></td></tr></tbody></table></figure></blockquote><blockquote><figure class="highlight crystal"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">>   然后打开修改CMakeCache.txt的CPU_...=ON,最好还是要修改下</span><br><span class="line">>   <span class="symbol">PYTHON_INCLUDE_DIR:</span>PATH=<span class="regexp">/anaconda2/include</span><span class="regexp">/python2.7</span></span><br><span class="line"><span class="regexp">>   PYTHON_LIBRARY:FILEPATH=/anaconda</span>2/<span class="class"><span class="keyword">lib</span>/<span class="title">libpython2</span>.7.<span class="title">dylib</span></span></span><br><span class="line">>   还有caffeconfig.cmake中的set(Caffe_CPU_ONLY 改为ON)</span><br><span class="line">>   改完后再cmake ..一次</span><br><span class="line">></span><br></pre></td></tr></tbody></table></figure></blockquote><blockquote><ul><li><p>遇到:<code>CMake Error at CMakeLists.txt:104 (add_dependencies): The dependency target "pycaffe" of target "pytest" does not exist.</code>不管他</p></li><li><p>记得先加入caffe路劲到python不然在pytest出会报错</p><p>先open ~/.bash_profile,类似如下内容是比较ok的,没有的话就对应着加进去</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">></span><span class="bash">     <span class="built_in">export</span> PATH=<span class="string">"/anaconda2/bin:<span class="variable">$PATH</span>"</span></span></span><br><span class="line"><span class="meta">></span><span class="bash">     <span class="built_in">export</span> PATH=/usr/<span class="built_in">local</span>/bin:<span class="variable">$PATH</span></span></span><br><span class="line"><span class="meta">></span><span class="bash">     <span class="built_in">export</span> PYTHONPATH=/Users/achunorigin/caffe/python:<span class="variable">$PYTHONPATH</span></span></span><br><span class="line"><span class="meta">></span><span class="bash">     <span class="built_in">export</span> CAFFE_ROOT=<span class="string">"/Users/achunorigin/caffe"</span></span></span><br><span class="line"><span class="meta">></span><span class="bash"></span></span><br></pre></td></tr></tbody></table></figure></li></ul></blockquote><blockquote><p>  之后保存并source ~/.bash_profile</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">></span><span class="bash">   在build目录下面:</span></span><br><span class="line"><span class="meta">></span><span class="bash">   make all</span></span><br><span class="line"><span class="meta">></span><span class="bash">   make runtest</span></span><br><span class="line"><span class="meta">></span><span class="bash">   make pytest</span></span><br><span class="line"><span class="meta">></span><span class="bash"></span></span><br></pre></td></tr></tbody></table></figure></blockquote><blockquote><p>若python</p><blockquote><p>import caffe 没有报错的话还是比较稳的,前提pytest要过</p></blockquote></blockquote><h4 id="3-问题汇总"><a href="#3-问题汇总" class="headerlink" title="3.问题汇总"></a>3.问题汇总</h4><p><code>protobuf问题</code></p><blockquote><p>之前在make all 步骤经常就是protobuf那边出错,在1%和2%之间就错了</p><p>这里其实就是protobuf版本问题出错:</p><ul><li>因为brew install 了protobuf</li><li>系统自带的protobuf也install了protobuf</li></ul><p>cmake默认brew所安装的目录,也就是/usr/local/里面的bin啊include啊caller啊什么的</p></blockquote><p>遇到protobuf问题就要卸掉之前所有有关的protobuf,然后:</p><blockquote><figure class="highlight crystal"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">>   conda uninstall <span class="class"><span class="keyword">lib</span></span></span><br><span class="line">>   conda uninstall protobuf</span><br><span class="line">>   conda install -c anaconda protobuf</span><br><span class="line">></span><br></pre></td></tr></tbody></table></figure></blockquote><blockquote><p>打开anaconda目录</p><figure class="highlight crystal"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">>   sudo cp bin/protoc /usr/local/bin/</span><br><span class="line">>   sudo rm -r /usr/local/<span class="keyword">include</span>/google/protobuf/</span><br><span class="line">>   sudo cp -r <span class="keyword">include</span>/google/protobuf/ <span class="regexp">/usr/local</span><span class="regexp">/include/google</span><span class="regexp">/protobuf/</span></span><br><span class="line">>   sudo cp -r <span class="class"><span class="keyword">lib</span> /<span class="title">usr</span>/<span class="title">local</span>/</span></span><br><span class="line">></span><br></pre></td></tr></tbody></table></figure></blockquote><blockquote><p>这样路径就会被识别到</p></blockquote><p><code></code>No module named_caffe`</p><figure class="highlight crystal"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">修改CmakeChache.txt里面为类似如下</span><br><span class="line"><span class="symbol">PYTHON_INCLUDE_DIR:</span>PATH=<span class="regexp">/anaconda2/include</span><span class="regexp">/python2.7</span></span><br><span class="line"><span class="regexp">PYTHON_LIBRARY:FILEPATH=/anaconda</span>2/<span class="class"><span class="keyword">lib</span>/<span class="title">libpython2</span>.7.<span class="title">dylib</span></span></span><br></pre></td></tr></tbody></table></figure><blockquote><p>最有可能的就是没有在caffe根目录下进行一次make pycaffe</p></blockquote><p><code>ld: library not found for -lboost_python</code></p><blockquote><p>打开cafffe根目录下的makefile</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">></span><span class="bash">   把:PYTHON_LIBRARIES ?= boost_python python2.7</span></span><br><span class="line"><span class="meta">></span><span class="bash">   改为:PYTHON_LIBRARIES ?= boost_python27 python2.7</span></span><br><span class="line"><span class="meta">></span><span class="bash">   再</span></span><br><span class="line"><span class="meta">></span><span class="bash">   <span class="built_in">export</span> PYTHONPATH=/Users/achunorigin/caffe/build/lib:<span class="variable">$PYTHONPATH</span></span></span><br><span class="line"><span class="meta">></span><span class="bash"></span></span><br></pre></td></tr></tbody></table></figure></blockquote></body></html>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;span class=&quot;description&quot;&gt;&lt;code&gt;[摘要]&lt;/code&gt;&lt;/span&gt;这是一篇在mac中搭建caffe环境的教程，介绍了搭建过程中可能遇到的问题，并提供一定的解决方案供参考。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="caffe" scheme="http://yoursite.com/categories/caffe/"/>
    
      <category term="环境搭建" scheme="http://yoursite.com/categories/caffe/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="caffe" scheme="http://yoursite.com/tags/caffe/"/>
    
      <category term="环境搭建" scheme="http://yoursite.com/tags/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
</feed>
